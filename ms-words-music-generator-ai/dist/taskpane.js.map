{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word, Excel, PowerPoint */\n\n// Initialize auth manager\nlet authManager = null;\n\n// Add variables to track uploaded files and image editing mode\nlet uploadedFile = null;\nlet capturedImageData = null;\nlet isImageEditingMode = false;\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word || \n      info.host === Office.HostType.Excel || \n      info.host === Office.HostType.PowerPoint) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    \n    console.log(\"🚀 Office add-in initialized\");\n    \n    // Initialize auth manager\n    authManager = new OfficeAuthManager();\n    console.log(\"🔐 Auth manager initialized:\", authManager);\n    \n    // Ensure generate button is visible\n    const runButton = document.getElementById(\"run\");\n    if (runButton) {\n      runButton.style.display = \"flex\";\n      runButton.style.visibility = \"visible\";\n      runButton.style.opacity = \"1\";\n      console.log(\"✅ Generate button made visible\");\n    }\n    \n    // Set up event listeners\n    document.getElementById(\"run\").onclick = generateImage;\n    document.getElementById(\"get-more-credits\").onclick = getMoreCredits;\n    document.getElementById(\"cancel-generation\").onclick = cancelGeneration;\n    document.getElementById(\"logoutButton\").onclick = handleLogout;\n\n    // New Image Editor event listeners\n    document.getElementById(\"uploadArea\").onclick = (event) => {\n      console.log(\"🖱️ Upload area clicked\", event.target);\n      // Don't trigger file input if clicking the clear button\n      if (event.target.closest('#clearUpload')) {\n        console.log(\"❌ Clear button clicked, not triggering file input\");\n        return;\n      }\n      console.log(\"📁 Triggering file input click\");\n      const fileInput = document.getElementById(\"fileInput\");\n      console.log(\"📁 File input element:\", fileInput);\n      if (fileInput) {\n        fileInput.click();\n        console.log(\"✅ File input clicked\");\n      } else {\n        console.error(\"❌ File input element not found\");\n      }\n    };\n    document.getElementById(\"fileInput\").onchange = (event) => {\n      console.log(\"📁 File input changed\", event);\n      handleFileUpload(event);\n    };\n    document.getElementById(\"getImageFromDoc\").onclick = getImageFromDocument;\n    document.getElementById(\"clearUpload\").onclick = clearUploadedImage;\n\n    console.log(\"✅ Event listeners set up\");\n\n    // Initial token check\n    console.log(\"🔍 Starting initial token check\");\n    checkTokens();\n    \n    // Check authentication status\n    console.log(\"🔍 Starting initial auth status check\");\n    checkAuthStatus();\n\n    // Set up interval for token checking every 3 seconds\n    const tokenCheckInterval = setInterval(() => {\n      console.log(\"🔄 Periodic token check\");\n      checkTokens();\n    }, 3000);\n\n    // Clean up interval when the page is unloaded\n    window.addEventListener('unload', () => {\n      if (tokenCheckInterval) {\n        clearInterval(tokenCheckInterval);\n      }\n    });\n    \n    console.log(\"🎉 Office add-in setup complete\");\n  }\n});\n\n// Handle file upload\nfunction handleFileUpload(event) {\n  console.log(\"📁 handleFileUpload called\", event);\n  const file = event.target.files[0];\n  console.log(\"📁 Selected file:\", file);\n  \n  if (file && file.type.startsWith('image/')) {\n    console.log(\"✅ Valid image file selected:\", file.name, file.type);\n    \n    // Store the uploaded file for later use\n    uploadedFile = file;\n    capturedImageData = null; // Clear any captured image data\n    isImageEditingMode = true;\n    \n    console.log(\"🔄 Starting file reader\");\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      console.log(\"✅ File reader loaded successfully\");\n      \n      // Update upload area to show selected file\n      const uploadArea = document.getElementById(\"uploadArea\");\n      const uploadContent = uploadArea.querySelector(\".upload-content\");\n      const clearButton = document.getElementById(\"clearUpload\");\n      \n      console.log(\"🎨 Updating UI elements:\", {\n        uploadArea: !!uploadArea,\n        uploadContent: !!uploadContent,\n        clearButton: !!clearButton\n      });\n      \n      if (uploadContent) {\n        uploadContent.innerHTML = `\n          <img src=\"${e.target.result}\" alt=\"${file.name}\" style=\"max-width: 100%; max-height: 80px; border-radius: 4px; object-fit: cover;\">\n          <div class=\"upload-text\" style=\"margin-top: 8px; font-size: 12px;\">${file.name}</div>\n        `;\n        console.log(\"✅ Upload content updated with image preview\");\n      } else {\n        console.error(\"❌ Upload content element not found\");\n      }\n      \n      if (uploadArea) {\n        uploadArea.style.borderColor = \"#0078D4\";\n        uploadArea.style.background = \"#F3F9FF\";\n        console.log(\"✅ Upload area styling updated\");\n      }\n      \n      // Show clear button\n      if (clearButton) {\n        clearButton.style.display = \"flex\";\n        console.log(\"✅ Clear button shown\");\n      } else {\n        console.error(\"❌ Clear button element not found\");\n      }\n      \n      // Update button text to indicate editing mode\n      const generateButton = document.getElementById(\"run\");\n      const generateButtonLabel = generateButton?.querySelector('.ms-Button-label');\n      \n      console.log(\"🔄 Updating generate button:\", {\n        generateButton: !!generateButton,\n        generateButtonLabel: !!generateButtonLabel,\n        isAuthenticated: !authManager?.isTokenExpired()\n      });\n      \n      if (generateButtonLabel) {\n        if (!authManager || authManager.isTokenExpired()) {\n          generateButtonLabel.textContent = 'Sign in to Edit Image';\n        } else {\n          generateButtonLabel.textContent = 'Edit Image';\n        }\n        console.log(\"✅ Generate button text updated:\", generateButtonLabel.textContent);\n      }\n      \n      showSuccess(`Image \"${file.name}\" selected for editing!`);\n      console.log(\"🎉 File upload handling completed successfully\");\n    };\n    \n    reader.onerror = function(error) {\n      console.error(\"❌ File reader error:\", error);\n      showError(\"Failed to read the selected file. Please try again.\");\n    };\n    \n    reader.readAsDataURL(file);\n  } else {\n    console.error(\"❌ Invalid file selected:\", {\n      file: file,\n      isImage: file?.type?.startsWith('image/')\n    });\n    showError(\"Please select a valid image file.\");\n  }\n}\n\n// Get image from document\nasync function getImageFromDocument() {\n  console.log(\"🖼️ getImageFromDocument called\");\n  \n  try {\n    showLoader(\"Getting image from document...\", false);\n    \n    // Get the current Office host type directly\n    const hostType = Office.context.host;\n    console.log(\"🏢 Office host type:\", hostType);\n    \n    // Call the appropriate function based on the host type\n    switch (hostType) {\n      case Office.HostType.Word:\n        console.log(\"📝 Calling getImageFromWord\");\n        await getImageFromWord();\n        break;\n      case Office.HostType.Excel:\n        console.log(\"📊 Calling getImageFromExcel\");\n        await getImageFromExcel();\n        break;\n      case Office.HostType.PowerPoint:\n        console.log(\"📽️ Calling getImageFromPowerPoint\");\n        await getImageFromPowerPoint();\n        break;\n      default:\n        console.error(\"❌ Unsupported Office application:\", hostType);\n        hideLoader();\n        showError(\"Image capture is not supported in this Office application.\");\n    }\n  } catch (error) {\n    hideLoader();\n    console.error(\"❌ Error getting image from document:\", error);\n    showError(\"Error getting image from document. Please try again.\");\n  }\n}\n\n// Get image from Word document\nasync function getImageFromWord() {\n  console.log(\"📝 getImageFromWord started\");\n  \n  try {\n    await Word.run(async (context) => {\n      console.log(\"🔄 Word.run context established\");\n      \n      // Get the selected range\n      const range = context.document.getSelection();\n      console.log(\"📍 Selection range obtained\");\n      \n      // Try to get inline pictures first\n      const inlineShapes = range.inlinePictures;\n      context.load(inlineShapes, \"items\");\n      console.log(\"🖼️ Loading inline pictures from selection\");\n      \n      await context.sync();\n      console.log(\"✅ Context sync completed, inline pictures loaded\");\n      console.log(\"📊 Number of inline pictures found:\", inlineShapes.items.length);\n      \n      if (inlineShapes.items.length > 0) {\n        console.log(\"✅ Found inline images in selection, processing first image\");\n        \n        // Get the first image in the selection\n        const image = inlineShapes.items[0];\n        \n        // Try loading multiple properties to understand what's available\n        console.log(\"🔄 Loading multiple properties for inline image\");\n        context.load(image, [\"base64ImageSrc\", \"width\", \"height\", \"altTextTitle\", \"altTextDescription\"]);\n        \n        await context.sync();\n        console.log(\"✅ Inline image properties loaded\");\n        console.log(\"📊 Image properties:\", {\n          base64ImageSrc: image.base64ImageSrc ? `${image.base64ImageSrc.length} chars` : 'null',\n          width: image.width,\n          height: image.height,\n          altTextTitle: image.altTextTitle,\n          altTextDescription: image.altTextDescription\n        });\n        \n        if (image.base64ImageSrc) {\n          console.log(\"🎯 Using base64ImageSrc data\");\n          await processWordImage(image.base64ImageSrc, 'word-inline-image.png');\n          return;\n        } else {\n          console.error(\"❌ No base64ImageSrc data available for inline image\");\n          \n          // Try alternative approach: get image as base64 using different method\n          console.log(\"🔄 Trying alternative base64 extraction method...\");\n          try {\n            // Try to get the image data using getBase64ImageSrc method if available\n            if (typeof image.getBase64ImageSrc === 'function') {\n              console.log(\"🔄 Using getBase64ImageSrc method\");\n              const base64Result = image.getBase64ImageSrc();\n              await context.sync();\n              \n              if (base64Result && base64Result.value) {\n                console.log(\"✅ Alternative method successful:\", base64Result.value.length, \"chars\");\n                await processWordImage(base64Result.value, 'word-inline-image-alt.png');\n                return;\n              }\n            } else {\n              console.log(\"⚠️ getBase64ImageSrc method not available\");\n            }\n            \n            // Try using Office.context.document.getSelectedDataAsync as fallback\n            console.log(\"🔄 Trying Office.context.document.getSelectedDataAsync fallback\");\n            Office.context.document.getSelectedDataAsync(\n              Office.CoercionType.Image,\n              { imageLeft: 0, imageTop: 0, imageWidth: 500, imageHeight: 500 },\n              async (result) => {\n                console.log(\"📋 getSelectedDataAsync result:\", {\n                  status: result.status,\n                  hasValue: !!result.value,\n                  valueType: typeof result.value,\n                  valueLength: result.value ? result.value.length : 0\n                });\n                \n                if (result.status === Office.AsyncResultStatus.Succeeded && result.value) {\n                  try {\n                    let base64Data;\n                    if (typeof result.value === 'string') {\n                      if (result.value.startsWith('data:image')) {\n                        base64Data = result.value.split(',')[1];\n                      } else {\n                        base64Data = result.value;\n                      }\n                      \n                      console.log(\"✅ Fallback method successful:\", base64Data.length, \"chars\");\n                      await processWordImage(base64Data, 'word-fallback-image.png');\n                      return;\n                    }\n                  } catch (fallbackError) {\n                    console.error(\"❌ Fallback processing error:\", fallbackError);\n                  }\n                }\n                \n                console.error(\"❌ All image extraction methods failed\");\n                hideLoader();\n                showError(\"Unable to extract image data. The image format may not be supported or there may be a Word API limitation.\");\n              }\n            );\n            \n            // Don't continue to the error below since we're trying the async fallback\n            return;\n            \n          } catch (altError) {\n            console.error(\"❌ Alternative extraction error:\", altError);\n          }\n        }\n      } else {\n        console.warn(\"⚠️ No inline pictures found in selection\");\n        \n        // Try to get floating images/shapes\n        console.log(\"🔄 Trying to find floating images/shapes in selection\");\n        \n        // Check if there are any shapes in the selection\n        try {\n          // Get the paragraph that contains the selection\n          const paragraph = range.paragraphs.getFirst();\n          context.load(paragraph);\n          await context.sync();\n          \n          // Try to get the entire document's inline pictures and shapes\n          const allInlineShapes = context.document.body.inlinePictures;\n          context.load(allInlineShapes, \"items\");\n          await context.sync();\n          \n          console.log(\"📊 Total inline pictures in document:\", allInlineShapes.items.length);\n          \n          if (allInlineShapes.items.length > 0) {\n            console.log(\"💡 Found images in document. Please try one of these methods:\");\n            console.log(\"   1. Click directly on an image to select it\");\n            console.log(\"   2. Place your cursor right next to an image\");\n            console.log(\"   3. Select text that includes an image\");\n            \n            // Try to automatically extract the first available image\n            console.log(\"🔄 Attempting to automatically extract the first available image...\");\n            try {\n              const firstImage = allInlineShapes.items[0];\n              context.load(firstImage, \"base64ImageSrc\");\n              await context.sync();\n              \n              console.log(\"✅ First image loaded, checking base64 data\");\n              console.log(\"📏 Base64 data length:\", firstImage.base64ImageSrc ? firstImage.base64ImageSrc.length : 'null');\n              \n              if (firstImage.base64ImageSrc) {\n                console.log(\"🎯 Successfully extracted first image automatically\");\n                await processWordImage(firstImage.base64ImageSrc, 'word-auto-extracted-image.png');\n                return;\n              } else {\n                console.warn(\"⚠️ First image has no base64ImageSrc data\");\n              }\n            } catch (autoExtractError) {\n              console.log(\"⚠️ Auto-extraction failed:\", autoExtractError.message);\n            }\n            \n            // Try alternative approach: select the image programmatically\n            console.log(\"🔄 Trying to select the first image programmatically...\");\n            try {\n              const firstImage = allInlineShapes.items[0];\n              \n              // Try to select the image first\n              firstImage.select();\n              await context.sync();\n              console.log(\"✅ Image selected programmatically\");\n              \n              // Now try to get the base64 data\n              context.load(firstImage, \"base64ImageSrc\");\n              await context.sync();\n              \n              console.log(\"📏 Base64 data length after selection:\", firstImage.base64ImageSrc ? firstImage.base64ImageSrc.length : 'null');\n              \n              if (firstImage.base64ImageSrc) {\n                console.log(\"🎯 Successfully extracted image after programmatic selection\");\n                await processWordImage(firstImage.base64ImageSrc, 'word-selected-image.png');\n                return;\n              } else {\n                console.warn(\"⚠️ Still no base64ImageSrc data after selection\");\n              }\n            } catch (selectError) {\n              console.log(\"⚠️ Programmatic selection failed:\", selectError.message);\n            }\n            \n            // Try getting the image through the paragraph that contains it\n            console.log(\"🔄 Trying to access image through containing paragraph...\");\n            try {\n              const paragraphs = context.document.body.paragraphs;\n              context.load(paragraphs, \"items\");\n              await context.sync();\n              \n              for (let i = 0; i < paragraphs.items.length; i++) {\n                const paragraph = paragraphs.items[i];\n                const paragraphImages = paragraph.inlinePictures;\n                context.load(paragraphImages, \"items\");\n                await context.sync();\n                \n                if (paragraphImages.items.length > 0) {\n                  console.log(`📄 Found ${paragraphImages.items.length} image(s) in paragraph ${i + 1}`);\n                  const paragraphImage = paragraphImages.items[0];\n                  context.load(paragraphImage, \"base64ImageSrc\");\n                  await context.sync();\n                  \n                  console.log(\"📏 Paragraph image base64 length:\", paragraphImage.base64ImageSrc ? paragraphImage.base64ImageSrc.length : 'null');\n                  \n                  if (paragraphImage.base64ImageSrc) {\n                    console.log(\"🎯 Successfully extracted image from paragraph\");\n                    await processWordImage(paragraphImage.base64ImageSrc, 'word-paragraph-image.png');\n                    return;\n                  }\n                }\n              }\n            } catch (paragraphError) {\n              console.log(\"⚠️ Paragraph approach failed:\", paragraphError.message);\n            }\n            \n            hideLoader();\n            showError(\"No image found in your selection. Please click directly on an image in the document, then try again.\");\n            return;\n          }\n        } catch (shapeError) {\n          console.log(\"⚠️ Could not check for shapes:\", shapeError.message);\n        }\n        \n        // If no images found anywhere, provide helpful guidance\n        console.log(\"❌ No images found in selection or document\");\n        hideLoader();\n        showError(\"No images found. Please:\\n1. Insert an image into your Word document\\n2. Click on the image to select it\\n3. Then click 'Get Image from Document'\");\n        return;\n      }\n      \n      // If we get here, there was an issue with the inline image\n      hideLoader();\n      showError(\"Could not extract image data. Please try selecting the image again.\");\n      \n    });\n  } catch (error) {\n    hideLoader();\n    console.error(\"❌ Error in getImageFromWord:\", {\n      error: error,\n      message: error.message,\n      stack: error.stack\n    });\n    showError(\"Failed to get image from Word. Please select an image and try again.\");\n  }\n}\n\n// Helper function to process Word image data\nasync function processWordImage(base64ImageSrc, fileName) {\n  console.log(\"🎯 Processing Word image data\");\n  console.log(\"📏 Base64 data length:\", base64ImageSrc.length);\n  \n  try {\n    // Convert base64 to blob and create a File object\n    const base64Data = base64ImageSrc;\n    const byteCharacters = atob(base64Data);\n    const byteArrays = [];\n    \n    console.log(\"🔄 Converting base64 to byte arrays\");\n    for (let offset = 0; offset < byteCharacters.length; offset += 512) {\n      const slice = byteCharacters.slice(offset, offset + 512);\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    \n    const blob = new Blob(byteArrays, { type: 'image/png' });\n    const file = new File([blob], fileName, { type: 'image/png' });\n    \n    console.log(\"✅ File object created:\", {\n      name: file.name,\n      size: file.size,\n      type: file.type\n    });\n    \n    // Set the uploaded file\n    uploadedFile = file;\n    capturedImageData = null;\n    isImageEditingMode = true;\n    \n    console.log(\"🔄 Updating global variables:\", {\n      uploadedFile: !!uploadedFile,\n      capturedImageData: !!capturedImageData,\n      isImageEditingMode: isImageEditingMode\n    });\n    \n    // Update the upload section UI\n    console.log(\"🎨 Calling updateUploadSectionWithFile\");\n    updateUploadSectionWithFile(file, `data:image/png;base64,${base64Data}`);\n    \n    hideLoader();\n    showSuccess(\"Image captured from Word document successfully!\");\n    console.log(\"🎉 Word image processing completed successfully\");\n    \n  } catch (error) {\n    console.error(\"❌ Error processing Word image:\", error);\n    hideLoader();\n    showError(\"Failed to process the captured image. Please try again.\");\n  }\n}\n\n// Get image from Excel document\nasync function getImageFromExcel() {\n  try {\n    await Excel.run(async (context) => {\n      // Get the active worksheet\n      const worksheet = context.workbook.worksheets.getActiveWorksheet();\n      \n      // Get all shapes (images) in the worksheet\n      const shapes = worksheet.shapes;\n      context.load(shapes, \"items\");\n      \n      await context.sync();\n      \n      if (shapes.items.length > 0) {\n        // Find the first image shape\n        let imageShape = null;\n        for (let i = 0; i < shapes.items.length; i++) {\n          const shape = shapes.items[i];\n          context.load(shape, \"type\");\n          await context.sync();\n          \n          if (shape.type === \"Image\") {\n            imageShape = shape;\n            break;\n          }\n        }\n        \n        if (imageShape) {\n          // Try to get the image data (Note: Excel API has limitations)\n          try {\n            // Load the image properties\n            context.load(imageShape, [\"width\", \"height\", \"left\", \"top\"]);\n            await context.sync();\n            \n            // Excel doesn't provide direct base64 access, so we'll show a helpful message\n            hideLoader();\n            showError(\"Excel doesn't support direct image extraction. Please save the image separately and upload it using the upload button.\");\n          } catch (imageError) {\n            hideLoader();\n            showError(\"Unable to extract image from Excel. Please save the image separately and upload it using the upload button.\");\n          }\n        } else {\n          hideLoader();\n          showError(\"No images found in the Excel worksheet.\");\n        }\n      } else {\n        hideLoader();\n        showError(\"No shapes found in the Excel worksheet.\");\n      }\n    });\n  } catch (error) {\n    hideLoader();\n    console.error(\"Error getting image from Excel:\", error);\n    showError(\"Failed to get image from Excel. Please try uploading the image using the upload button.\");\n  }\n}\n\n// Get image from PowerPoint document\nasync function getImageFromPowerPoint() {\n  console.log(\"📽️ getImageFromPowerPoint started\");\n  \n  try {\n    // PowerPoint has specific limitations with Office.context.document.getSelectedDataAsync\n    // Focus on the PowerPoint API approach first\n    if (typeof PowerPoint !== 'undefined' && PowerPoint.run) {\n      console.log(\"🔄 Using PowerPoint API approach\");\n      \n      try {\n        await PowerPoint.run(async (context) => {\n          console.log(\"🔄 PowerPoint.run context established\");\n          \n          // Get the current selection\n          const selection = context.presentation.getSelectedShapes();\n          context.load(selection, \"items\");\n          console.log(\"📍 Loading selected shapes\");\n          \n          await context.sync();\n          console.log(\"✅ Context sync completed\");\n          console.log(\"📊 Number of selected shapes:\", selection.items.length);\n          \n          if (selection.items.length === 0) {\n            // Try to get all shapes from the current slide to provide better guidance\n            console.log(\"🔍 No shapes selected, checking current slide for available images\");\n            \n            try {\n              // Get the active slide\n              const slides = context.presentation.slides;\n              context.load(slides, \"items\");\n              await context.sync();\n              \n              if (slides.items.length === 0) {\n                throw new Error('No slides found in the presentation.');\n              }\n              \n              // Get the first slide (or you could try to get the active slide)\n              const currentSlide = slides.items[0];\n              const shapes = currentSlide.shapes;\n              context.load(shapes, \"items\");\n              await context.sync();\n              \n              console.log(\"📊 Total shapes on slide:\", shapes.items.length);\n              \n              // Count image shapes\n              let imageCount = 0;\n              let imageShapes = [];\n              \n              for (let i = 0; i < shapes.items.length; i++) {\n                const shape = shapes.items[i];\n                context.load(shape, [\"type\", \"name\", \"id\"]);\n                await context.sync();\n                \n                console.log(`Shape ${i + 1}:`, {\n                  type: shape.type,\n                  name: shape.name,\n                  id: shape.id\n                });\n                \n                // PowerPoint API sometimes returns 'Image' as string, sometimes as enum\n                const isImage = shape.type === PowerPoint.ShapeType.picture || \n                               shape.type === 'Image' || \n                               shape.type === 'Picture' ||\n                               String(shape.type).toLowerCase() === 'image' ||\n                               String(shape.type).toLowerCase() === 'picture';\n                \n                if (isImage) {\n                  imageCount++;\n                  imageShapes.push({\n                    index: i + 1,\n                    name: shape.name,\n                    id: shape.id\n                  });\n                }\n              }\n              \n              console.log(\"📊 Number of images found on slide:\", imageCount);\n              console.log(\"🖼️ Image shapes:\", imageShapes);\n              \n              if (imageCount > 0) {\n                const imageList = imageShapes.map(img => `• Image ${img.index}: ${img.name || 'Unnamed'}`).join('\\n');\n                console.log(\"💡 Found images but none selected. Trying fallback method before showing guidance.\");\n                // Instead of immediately throwing an error, try the fallback method first\n                throw new Error('FALLBACK_NEEDED_NO_SELECTION');\n              } else {\n                throw new Error('No images found on this slide. Please insert an image first, then select it and try again.');\n              }\n            } catch (slideError) {\n              console.log(\"⚠️ Error checking slide content:\", slideError.message);\n              \n              // If this is our fallback signal, re-throw it to be handled by the outer catch\n              if (slideError.message === 'FALLBACK_NEEDED_NO_SELECTION') {\n                throw slideError;\n              }\n              \n              // Otherwise, throw the generic no selection error\n              throw new Error('No shapes selected. Please click directly on an image in your PowerPoint slide to select it, then try again.');\n            }\n          }\n          \n          // Get the first selected shape\n          const shape = selection.items[0];\n          context.load(shape, [\"type\", \"name\", \"id\"]);\n          console.log(\"🔄 Loading shape properties\");\n          \n          await context.sync();\n          console.log(\"✅ Shape properties loaded:\", {\n            type: shape.type,\n            name: shape.name,\n            id: shape.id\n          });\n          \n          // Check if the shape is an image\n          console.log(\"🔍 Checking shape type:\", {\n            shapeType: shape.type,\n            shapeTypeString: String(shape.type),\n            expectedEnum: PowerPoint.ShapeType.picture,\n            expectedEnumString: String(PowerPoint.ShapeType.picture)\n          });\n          \n          // PowerPoint API sometimes returns 'Image' as string, sometimes as enum\n          const isImage = shape.type === PowerPoint.ShapeType.picture || \n                         shape.type === 'Image' || \n                         shape.type === 'Picture' ||\n                         String(shape.type).toLowerCase() === 'image' ||\n                         String(shape.type).toLowerCase() === 'picture';\n          \n          if (!isImage) {\n            throw new Error(`Selected shape \"${shape.name || 'Unnamed'}\" is not an image (type: ${shape.type}). Please select an image instead.`);\n          }\n          \n          console.log(\"🖼️ Shape is a picture, but PowerPoint Add-in API doesn't support direct image extraction\");\n          console.log(\"🔄 Attempting fallback method using Office.context.document.getSelectedDataAsync\");\n          \n          // Instead of immediately throwing an error, try the fallback method\n          throw new Error('FALLBACK_NEEDED');\n        });\n        \n        // If we reach here, the PowerPoint API approach succeeded (which shouldn't happen)\n        return;\n        \n      } catch (apiError) {\n        console.log(\"⚠️ PowerPoint API approach result:\", apiError.message);\n        \n        // If the error is our special fallback signal, try the fallback method\n        if (apiError.message === 'FALLBACK_NEEDED' || apiError.message === 'FALLBACK_NEEDED_NO_SELECTION') {\n          console.log(\"🔄 Trying Office.context.document.getSelectedDataAsync fallback for PowerPoint\");\n          \n          return new Promise((resolve, reject) => {\n            Office.context.document.getSelectedDataAsync(\n              Office.CoercionType.Image,\n              { \n                imageLeft: 0, \n                imageTop: 0, \n                imageWidth: 500, \n                imageHeight: 500 \n              },\n              async (result) => {\n                console.log(\"📋 PowerPoint getSelectedDataAsync result:\", {\n                  status: result.status,\n                  hasValue: !!result.value,\n                  valueType: typeof result.value,\n                  valueLength: result.value ? result.value.length : 0,\n                  error: result.error\n                });\n                \n                if (result.status === Office.AsyncResultStatus.Succeeded && result.value) {\n                  try {\n                    let base64Data;\n                    if (typeof result.value === 'string') {\n                      if (result.value.startsWith('data:image')) {\n                        base64Data = result.value.split(',')[1];\n                      } else {\n                        base64Data = result.value;\n                      }\n                      \n                      console.log(\"✅ PowerPoint fallback method successful:\", base64Data.length, \"chars\");\n                      await processPowerPointImage(base64Data, 'powerpoint-fallback-image.png');\n                      resolve();\n                      return;\n                    }\n                  } catch (fallbackError) {\n                    console.error(\"❌ PowerPoint fallback processing error:\", fallbackError);\n                    reject(fallbackError);\n                    return;\n                  }\n                }\n                \n                // If fallback also failed, show appropriate message based on the original error\n                console.error(\"❌ PowerPoint fallback method also failed\");\n                hideLoader();\n                \n                if (apiError.message === 'FALLBACK_NEEDED_NO_SELECTION') {\n                  // Show the selection guidance since no shapes were selected\n                  showError(`Found image(s) on this slide but none are selected.\n\nPlease click directly on an image to select it, then try \"Get Image from Document\" again.\n\nAlternative solutions if selection doesn't work:\n1. **Use the Upload Button**: Right-click the image → \"Save as Picture\" → then upload using the upload button above\n2. **Copy & Paste**: Copy the image, paste into an image editor, save, then upload`);\n                } else {\n                  // Show the general API limitation message\n                  showError(`PowerPoint Add-in API Limitation: Direct image extraction is not supported by Microsoft's Office Add-in platform.\n\nAlternative solutions:\n1. **Use the Upload Button**: Right-click the image in PowerPoint → \"Save as Picture\" → then upload using the upload button above\n2. **Copy & Paste**: Copy the image in PowerPoint, paste into an image editor, save, then upload\n3. **Extract from File**: Save PowerPoint as .zip, navigate to ppt/media folder to find original images\n\nThis is a known limitation of Office Add-ins, not a bug in this tool.`);\n                }\n                reject(new Error('PowerPoint image extraction failed'));\n              }\n            );\n          });\n        } else {\n          // Handle other API errors normally\n          hideLoader();\n          showError(apiError.message);\n          return;\n        }\n      }\n    } else {\n      console.log(\"⚠️ PowerPoint API not available\");\n      hideLoader();\n      showError(\"PowerPoint API is not available. Please ensure you're using a supported version of PowerPoint and try again.\");\n      return;\n    }\n    \n  } catch (error) {\n    hideLoader();\n    console.error(\"❌ Error in getImageFromPowerPoint:\", {\n      error: error,\n      message: error.message,\n      stack: error.stack\n    });\n    \n    // Provide more specific error messages\n    let errorMessage = \"Failed to get image from PowerPoint.\";\n    \n    if (error.message.includes('Please click directly on') || \n        error.message.includes('No images found') ||\n        error.message.includes('Please select an image')) {\n      errorMessage = error.message;\n    } else if (error.message.includes('not an image')) {\n      errorMessage = error.message;\n    } else if (error.message.includes('No base64 data') || error.message.includes('unsupported format')) {\n      errorMessage = error.message + \"\\n\\nTry saving the image separately and using the upload button instead.\";\n    } else if (error.message.includes('PowerPoint API is not available')) {\n      errorMessage = error.message;\n    } else if (error.message.includes('PowerPoint Add-in API does not support') || error.message.includes('PowerPoint Add-in API limitation')) {\n      errorMessage = `PowerPoint Add-in API Limitation: Direct image extraction is not supported by Microsoft's Office Add-in platform.\n\nAlternative solutions:\n1. **Use the Upload Button**: Right-click the image in PowerPoint → \"Save as Picture\" → then upload using the upload button above\n2. **Copy & Paste**: Copy the image in PowerPoint, paste into an image editor, save, then upload\n3. **Extract from File**: Save PowerPoint as .zip, navigate to ppt/media folder to find original images\n\nThis is a known limitation of Office Add-ins, not a bug in this tool.`;\n    } else {\n      errorMessage = \"Failed to extract image from PowerPoint. Please try:\\n\\n1. Click directly on an image to select it\\n2. Make sure the image is not grouped with other objects\\n3. Try using the upload button as an alternative\";\n    }\n    \n    showError(errorMessage);\n  }\n}\n\n// Helper function to process PowerPoint image data\nasync function processPowerPointImage(base64Data, fileName) {\n  console.log(\"🎯 Processing PowerPoint image data\");\n  console.log(\"📏 Base64 data length:\", base64Data.length);\n  \n  try {\n    // Convert base64 to blob and create a File object\n    const byteCharacters = atob(base64Data);\n    const byteArrays = [];\n    \n    console.log(\"🔄 Converting base64 to byte arrays\");\n    for (let offset = 0; offset < byteCharacters.length; offset += 512) {\n      const slice = byteCharacters.slice(offset, offset + 512);\n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n    \n    const blob = new Blob(byteArrays, { type: 'image/png' });\n    const file = new File([blob], fileName, { type: 'image/png' });\n    \n    console.log(\"✅ PowerPoint File object created:\", {\n      name: file.name,\n      size: file.size,\n      type: file.type\n    });\n    \n    // Set the uploaded file\n    uploadedFile = file;\n    capturedImageData = null;\n    isImageEditingMode = true;\n    \n    console.log(\"🔄 Updating global variables for PowerPoint:\", {\n      uploadedFile: !!uploadedFile,\n      capturedImageData: !!capturedImageData,\n      isImageEditingMode: isImageEditingMode\n    });\n    \n    // Update the upload section UI\n    console.log(\"🎨 Calling updateUploadSectionWithFile for PowerPoint\");\n    updateUploadSectionWithFile(file, `data:image/png;base64,${base64Data}`);\n    \n    hideLoader();\n    showSuccess(\"Image captured from PowerPoint successfully!\");\n    console.log(\"🎉 PowerPoint image processing completed successfully\");\n    \n  } catch (error) {\n    console.error(\"❌ Error processing PowerPoint image:\", error);\n    hideLoader();\n    showError(\"Failed to process the captured image. Please try again.\");\n  }\n}\n\n// New helper function to update the upload section UI with captured image\nfunction updateUploadSectionWithFile(file, imageDataUrl) {\n  console.log(\"🎨 Updating upload section with captured file:\", {\n    fileName: file.name,\n    fileSize: file.size,\n    fileType: file.type,\n    hasImageDataUrl: !!imageDataUrl\n  });\n  \n  // Update upload area to show selected file\n  const uploadArea = document.getElementById(\"uploadArea\");\n  const uploadContent = uploadArea.querySelector(\".upload-content\");\n  const clearButton = document.getElementById(\"clearUpload\");\n  \n  console.log(\"🔍 DOM elements check:\", {\n    uploadArea: !!uploadArea,\n    uploadContent: !!uploadContent,\n    clearButton: !!clearButton\n  });\n  \n  if (uploadContent) {\n    uploadContent.innerHTML = `\n      <img src=\"${imageDataUrl}\" alt=\"${file.name}\" style=\"max-width: 100%; max-height: 80px; border-radius: 4px; object-fit: cover;\">\n      <div class=\"upload-text\" style=\"margin-top: 8px; font-size: 12px;\">${file.name}</div>\n    `;\n    console.log(\"✅ Upload content updated with image preview\");\n  } else {\n    console.error(\"❌ Upload content element not found!\");\n  }\n  \n  if (uploadArea) {\n    uploadArea.style.borderColor = \"#0078D4\";\n    uploadArea.style.background = \"#F3F9FF\";\n    console.log(\"✅ Upload area styling updated\");\n  } else {\n    console.error(\"❌ Upload area element not found!\");\n  }\n  \n  // Show clear button\n  if (clearButton) {\n    clearButton.style.display = \"flex\";\n    console.log(\"✅ Clear button shown\");\n  } else {\n    console.error(\"❌ Clear button element not found!\");\n  }\n  \n  // Update button text to indicate editing mode\n  const generateButton = document.getElementById(\"run\");\n  const generateButtonLabel = generateButton?.querySelector('.ms-Button-label');\n  \n  console.log(\"🔄 Updating generate button:\", {\n    generateButton: !!generateButton,\n    generateButtonLabel: !!generateButtonLabel,\n    isAuthenticated: !authManager?.isTokenExpired()\n  });\n  \n  if (generateButtonLabel) {\n    if (!authManager || authManager.isTokenExpired()) {\n      generateButtonLabel.textContent = 'Sign in to Edit Image';\n    } else {\n      generateButtonLabel.textContent = 'Edit Image';\n    }\n    console.log(\"✅ Generate button text updated:\", generateButtonLabel.textContent);\n  } else {\n    console.error(\"❌ Generate button label not found!\");\n  }\n  \n  console.log(\"🎉 Upload section update completed successfully\");\n}\n\n// Check authentication status\nfunction checkAuthStatus() {\n  console.log(\"🔍 Checking authentication status\");\n  if (!authManager) {\n    console.error(\"❌ Auth manager not initialized\");\n    return;\n  }\n  \n  console.log(\"🔐 Auth manager available, checking token expiry\");\n  const isAuthenticated = !authManager.isTokenExpired();\n  console.log(\"🔍 Authentication status:\", isAuthenticated);\n  \n  // Check what's in session storage\n  const userId = sessionStorage.getItem('user_id');\n  const accessToken = sessionStorage.getItem('access_token');\n  console.log(\"💾 Session storage check:\", {\n    userId: userId ? `${userId.substring(0, 10)}...` : 'null',\n    accessToken: accessToken ? `${accessToken.substring(0, 10)}...` : 'null'\n  });\n  \n  updateAuthUI(isAuthenticated);\n}\n\n// Update authentication UI\nfunction updateAuthUI(isAuthenticated) {\n  console.log(\"Updating UI for authentication status:\", isAuthenticated);\n  const logoutButton = document.getElementById('logoutButton');\n  const runButton = document.getElementById('run');\n  const getMoreCreditsButton = document.getElementById('get-more-credits');\n  const generateButtonLabel = runButton.querySelector('.ms-Button-label');\n  const tokenDisplay = document.getElementById(\"token-display\");\n  const accountBenefits = document.getElementById(\"account-benefits\");\n  const creditsFooter = document.getElementById(\"credits-footer\");\n    \n  if (isAuthenticated) {\n    // User is authenticated - show logout button, hide sign-in elements\n    logoutButton.style.display = 'inline-block';\n    runButton.style.display = 'flex';\n    runButton.style.visibility = 'visible';\n    runButton.disabled = false;\n    \n    // Show the credits footer when authenticated\n    if (creditsFooter) {\n      creditsFooter.style.display = 'flex';\n    }\n    \n    // Hide the account benefits text when authenticated\n    if (accountBenefits) {\n      accountBenefits.style.display = 'none';\n    }\n    \n    // Set button text based on whether we're in image editing mode\n    if (isImageEditingMode) {\n      generateButtonLabel.textContent = 'Edit Image';\n    } else {\n      generateButtonLabel.textContent = 'Generate';\n    }\n    \n    getMoreCreditsButton.disabled = false;\n    // Token display will be updated by checkTokens()\n  } else {\n    // User is not authenticated - show sign-in elements, hide logout\n    logoutButton.style.display = 'none';\n    runButton.style.display = 'flex';\n    runButton.style.visibility = 'visible';\n    runButton.disabled = false;\n    \n    // Hide the credits footer when not authenticated\n    if (creditsFooter) {\n      creditsFooter.style.display = 'none';\n    }\n    \n    // Show the account benefits text when not authenticated\n    if (accountBenefits) {\n      accountBenefits.style.display = 'block';\n    }\n    \n    // Set button text based on whether we're in image editing mode\n    if (isImageEditingMode) {\n      generateButtonLabel.textContent = 'Sign in to Edit Image';\n    } else {\n      generateButtonLabel.textContent = 'Sign in to Generate';\n    }\n    \n    // Clear the token display when not authenticated\n    if (tokenDisplay) {\n      tokenDisplay.textContent = '';\n      tokenDisplay.classList.remove(\"premium\");\n    }\n    \n    getMoreCreditsButton.disabled = true;\n  }\n}\n\n// Add variable to track current authentication process\nlet currentAuthProcess = null;\n\n// Handle login\nasync function handleLogin() {\n  console.log(\"Login button clicked\");\n  try {\n    showLoader(\"Authenticating...\", false);\n    console.log(\"Starting authentication process\");\n    \n    // Store the authentication promise\n    currentAuthProcess = authManager.authenticate();\n    const result = await currentAuthProcess;\n    currentAuthProcess = null;\n    \n    console.log(\"Authentication result:\", result);\n    \n    if (result.success) {\n      console.log(\"Authentication successful\");\n      showSuccess(\"Authentication successful!\");\n      updateAuthUI(true);\n    } else {\n      // Provide more specific error messages based on the error type\n      let errorMessage = result.error;\n      console.error(\"Authentication failed:\", errorMessage);\n      \n      if (errorMessage.includes(\"Popup was blocked\")) {\n        errorMessage = \"Your browser blocked the authentication popup. Please follow the instructions in the modal.\";\n      } else if (errorMessage.includes(\"Authentication cancelled by user\")) {\n        errorMessage = \"Authentication was cancelled.\";\n      } else if (errorMessage.includes(\"Authentication timed out\")) {\n        errorMessage = \"Authentication timed out. Please try again.\";\n      } else if (errorMessage.includes(\"State mismatch\")) {\n        errorMessage = \"Security verification failed. Please try again.\";\n      }\n      \n      showError(`Authentication failed: ${errorMessage}`);\n      updateAuthUI(false);\n    }\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    showError(`Error: ${error.message}`);\n    updateAuthUI(false);\n  } finally {\n    // Always hide the loader and reset the current process\n    hideLoader();\n    currentAuthProcess = null;\n  }\n}\n\n// Add cancel authentication function\nasync function cancelAuthentication() {\n  console.log(\"Cancelling authentication process\");\n  if (authManager) {\n    authManager.cancelAuth();\n  }\n  if (currentAuthProcess) {\n    currentAuthProcess = null;\n  }\n  hideLoader();\n  showNotification(\"Authentication cancelled.\", \"info\");\n  updateAuthUI(false);\n}\n\n// Add cancel credits dialog function\nasync function cancelCreditsDialog() {\n  console.log(\"Cancelling credits dialog\");\n  hideLoader();\n  showNotification(\"Purchase cancelled.\", \"info\");\n}\n\n// Update showLoader function to handle authentication cancellation\nfunction showLoader(message = \"Generating your image...\", isGenerating = true) {\n  const loader = document.getElementById(\"loader\");\n  const loaderText = loader.querySelector(\".loader-text\");\n  const cancelButton = document.getElementById(\"cancel-generation\");\n  const authLoadingContent = document.getElementById(\"auth-loading-content\");\n  \n  loaderText.textContent = message;\n  loader.classList.add(\"active\");\n  \n  // Show appropriate cancel button text based on the operation\n  if (cancelButton) {\n    if (isGenerating) {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel Generation\";\n      cancelButton.onclick = cancelGeneration;\n    } else if (message.includes(\"Authenticating\")) {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel\";\n      cancelButton.onclick = cancelAuthentication;\n    } else if (message.includes(\"purchase\")) {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel\";\n      cancelButton.onclick = cancelCreditsDialog;\n    } else {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel\";\n      cancelButton.onclick = cancelCreditsDialog;\n    }\n  }\n  \n  // Handle authentication loading experience\n  if (!isGenerating && message.includes(\"Authenticating\")) {\n    // Show the auth loading content\n    authLoadingContent.style.display = \"block\";\n    loaderText.style.display = \"none\";\n    \n    // Start the animated loading steps\n    startAuthLoadingAnimation();\n  } else {\n    // Show regular loading content\n    authLoadingContent.style.display = \"none\";\n    loaderText.style.display = \"block\";\n  }\n}\n\n// Function to animate the authentication loading steps\nfunction startAuthLoadingAnimation() {\n  const steps = document.querySelectorAll('.auth-loading-step');\n  const dots = document.querySelectorAll('.auth-progress-dot');\n  let currentStep = 0;\n  \n  // Clear any existing interval\n  if (window.authLoadingInterval) {\n    clearInterval(window.authLoadingInterval);\n    window.authLoadingInterval = null; // Ensure it's reset\n  }\n  \n  // Function to update the active step\n  function updateActiveStep() {\n    // Remove active class from all steps and dots\n    steps.forEach(step => step.classList.remove('active'));\n    dots.forEach(dot => dot.classList.remove('active'));\n    \n    // Add active class to current step and dot\n    if (currentStep < steps.length) {\n      steps[currentStep].classList.add('active');\n      dots[currentStep].classList.add('active');\n      currentStep++;\n      \n      // If this was the last step, clear the interval\n      if (currentStep >= steps.length) {\n        if (window.authLoadingInterval) {\n          clearInterval(window.authLoadingInterval);\n          window.authLoadingInterval = null;\n          console.log(\"Auth animation finished and stopped.\");\n        }\n      }\n    } else {\n      // This part should ideally not be reached if interval is cleared correctly\n      // but as a fallback, clear interval here too\n      if (window.authLoadingInterval) {\n        clearInterval(window.authLoadingInterval);\n        window.authLoadingInterval = null;\n      }\n    }\n  }\n  \n  // Set initial active step\n  updateActiveStep();\n  \n  // Set interval to change steps every 10 seconds (for 50 second total auth time)\n  window.authLoadingInterval = setInterval(updateActiveStep, 10000);\n}\n\n// Update hideLoader function to clean up auth loading animation\nfunction hideLoader() {\n  const loader = document.getElementById(\"loader\");\n  const authLoadingContent = document.getElementById(\"auth-loading-content\");\n  \n  loader.classList.remove(\"active\");\n  \n  // Reset auth loading content\n  if (authLoadingContent) {\n    authLoadingContent.style.display = \"none\";\n    \n    // Reset all steps\n    const steps = document.querySelectorAll('.auth-loading-step');\n    steps.forEach(step => step.classList.remove('active'));\n    steps[0].classList.add('active');\n  }\n  \n  // Clear any existing interval\n  if (window.authLoadingInterval) {\n    clearInterval(window.authLoadingInterval);\n    window.authLoadingInterval = null;\n  }\n  \n  // Reset the cancel button to default state\n  const cancelButton = document.getElementById(\"cancel-generation\");\n  if (cancelButton) {\n    cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel Generation\";\n    cancelButton.onclick = cancelGeneration;\n  }\n  \n  // Reset the current controller when hiding loader\n  currentGenerationController = null;\n}\n\n// Add variable to track the current generation request\nlet currentGenerationController = null;\n\n// Add variable to track purchase polling interval\nlet purchaseCheckInterval = null;\n\n// Add debug function to manually stop purchase check\nwindow.debugStopPurchaseCheck = function() {\n  console.log('🛑 Manual debug stop of purchase check called');\n  console.log('🔍 Current purchaseCheckInterval state:', purchaseCheckInterval);\n  \n  if (purchaseCheckInterval) {\n    console.log('🗑️ Clearing purchase check interval manually');\n    clearInterval(purchaseCheckInterval);\n    purchaseCheckInterval = null;\n    hideLoader();\n    showSuccess(\"Purchase check stopped manually (debug function)\");\n    return true;\n  } else {\n    console.log('❌ No active purchase check interval found');\n    showNotification(\"No active purchase check found\", \"info\");\n    return false;\n  }\n};\n\n// Add debug function to check current state\nwindow.debugPurchaseCheckState = function() {\n  console.log('🔍 Purchase check debug state:', {\n    purchaseCheckInterval: purchaseCheckInterval,\n    intervalIsActive: !!purchaseCheckInterval,\n    intervalId: purchaseCheckInterval\n  });\n  return {\n    active: !!purchaseCheckInterval,\n    intervalId: purchaseCheckInterval\n  };\n};\n\n/**\n * Check if a user is premium\n * @param {number} userId - The user ID to check premium status for\n * @returns {Promise<boolean>} Whether the user is premium\n */\nasync function checkPremiumStatus(userId) {\n    try {\n        if (!userId) {\n            throw new Error('User ID is required');\n        }\n        \n        console.log('🔍 Checking premium status for user:', userId);\n        const response = await fetch(`https://multiplewords.com/api/account/user_settings/${userId}`);\n\n        if (!response.ok) {\n            console.error('❌ Failed to get premium status:', response.status, response.statusText);\n            throw new Error(`Failed to get premium status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        const userRecord = data?.user_info?.find(user => user.user_id === parseInt(userId));\n        const isPremium = userRecord?.is_user_paid || false;\n\n        console.log('✅ Premium status retrieved successfully:', isPremium);\n        return isPremium;\n    } catch (error) {\n        console.error('❌ Error checking premium status:', error);\n        throw error;\n    }\n}\n\n/**\n * Get the premium purchase URL\n * @param {number} userId - The user ID to use in the URL\n * @returns {string} The premium purchase URL\n */\nfunction getPremiumPurchaseUrl(userId) {\n    return `https://saifs.ai/canva_pricing/${userId}/16`;\n}\n\n// Update checkTokens function\nasync function checkTokens() {\n  const tokenDisplay = document.getElementById(\"token-display\");\n  const generateButton = document.getElementById(\"run\");\n  const creditsFooter = document.getElementById(\"credits-footer\");\n\n  console.log(\"🔍 checkTokens called - DOM elements check:\", {\n    tokenDisplay: !!tokenDisplay,\n    generateButton: !!generateButton,\n    creditsFooter: !!creditsFooter,\n    tokenDisplayElement: tokenDisplay,\n    currentTokenText: tokenDisplay?.textContent\n  });\n\n  try {\n    // Check authentication status first\n    if (!authManager || authManager.isTokenExpired()) {\n      console.log(\"User is not authenticated. Hiding credits footer.\");\n      \n      // Hide the entire credits footer when not authenticated\n      if (creditsFooter) {\n        creditsFooter.style.display = \"none\";\n        console.log(\"✅ Credits footer hidden for non-authenticated user\");\n      }\n      \n      // Clear token display when not authenticated\n      if (tokenDisplay) {\n        tokenDisplay.textContent = '';\n        tokenDisplay.classList.remove(\"premium\");\n      }\n      \n      // Set appropriate button text for non-authenticated users\n      if (generateButton) {\n        const generateButtonLabel = generateButton.querySelector('.ms-Button-label');\n        generateButton.disabled = false;\n        generateButton.classList.remove('disabled');\n        \n        // Set button text based on whether we're in image editing mode\n        if (isImageEditingMode) {\n          generateButtonLabel.textContent = 'Sign in to Edit Image';\n        } else {\n          generateButtonLabel.textContent = 'Sign in to Generate';\n        }\n      }\n      return; // Exit the function early\n    }\n\n    // Show the credits footer when authenticated\n    if (creditsFooter) {\n      creditsFooter.style.display = \"flex\";\n      console.log(\"✅ Credits footer shown for authenticated user\");\n    }\n\n    // Get user ID from auth manager only if authenticated\n    const userId = authManager.getUserId();\n    if (!userId) {\n      console.warn(\"Authenticated user has no ID available. Check auth flow.\");\n      if (tokenDisplay) {\n        tokenDisplay.textContent = \"Error\";\n        tokenDisplay.classList.remove(\"premium\");\n      }\n      if (generateButton) {\n        generateButton.disabled = true;\n        generateButton.classList.add('disabled');\n        generateButton.querySelector(\".ms-Button-label\").textContent = \"Authentication Error\";\n      }\n      return;\n    }\n\n    console.log(\"Checking tokens for authenticated user:\", userId);\n\n    // First check premium status\n    const isPremium = await checkPremiumStatus(userId);\n\n    const response = await fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`, {\n      method: \"GET\"\n    });\n\n    console.log(\"Token check API response status:\", response.status);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    console.log(\"Token check full response:\", data);\n    console.log(\"Credits object:\", data.credits);\n\n    console.log(\"Is premium user?\", isPremium);\n\n    if (isPremium) {\n      // Handle premium user\n      console.log(\"Handling premium user display\");\n      if (tokenDisplay) {\n        console.log(\"🔄 Setting token display to ∞ for premium user\");\n        tokenDisplay.textContent = \"∞\";\n        tokenDisplay.classList.add(\"premium\");\n        console.log(\"✅ Token display updated:\", {\n          textContent: tokenDisplay.textContent,\n          classList: tokenDisplay.classList.toString(),\n          style: tokenDisplay.style.cssText\n        });\n      } else {\n        console.error(\"❌ tokenDisplay element not found!\");\n      }\n      \n      // Ensure button is enabled for premium users, regardless of token count\n      if (generateButton) {\n        generateButton.disabled = false;\n        generateButton.classList.remove('disabled');\n        generateButton.querySelector(\".ms-Button-label\").textContent = \"Generate\";\n        console.log(\"✅ Generate button updated for premium user\");\n      }\n    } else {\n      // Handle regular user\n      const tokenCount = data.credits && typeof data.credits.videos !== 'undefined' ? data.credits.videos : 0;\n      console.log(\"Regular user token count:\", tokenCount);\n      if (tokenDisplay) {\n        tokenDisplay.textContent = tokenCount;\n        tokenDisplay.classList.remove(\"premium\");\n        console.log(\"✅ Token display updated for regular user:\", tokenCount);\n      }\n\n      // Disable/enable generate button based on token availability\n      if (tokenCount <= 0) {\n        console.log(\"No tokens available, disabling generate button\");\n        if (generateButton) {\n          generateButton.disabled = true;\n          generateButton.classList.add('disabled');\n          generateButton.querySelector(\".ms-Button-label\").textContent = \"No Credits Available\";\n        }\n      } else {\n        console.log(\"Tokens available, enabling generate button\");\n        if (generateButton) {\n          generateButton.disabled = false;\n          generateButton.classList.remove('disabled');\n          generateButton.querySelector(\".ms-Button-label\").textContent = \"Generate\";\n        }\n      }\n    }\n  } catch (error) {\n    console.error(\"Detailed error in checkTokens:\", {\n      error: error,\n      message: error.message,\n      stack: error.stack\n    });\n    if (tokenDisplay) {\n      tokenDisplay.textContent = \"Error\";\n      tokenDisplay.classList.remove(\"premium\");\n    }\n    // Disable button on error and show appropriate message\n    if (generateButton) {\n      generateButton.disabled = true;\n      generateButton.classList.add('disabled');\n      generateButton.querySelector(\".ms-Button-label\").textContent = \"Error Checking Credits\";\n    }\n  }\n}\n\n// Add cancel generation function\nasync function cancelGeneration() {\n  if (currentGenerationController) {\n    // Abort the current request\n    currentGenerationController.abort();\n    currentGenerationController = null;\n    \n    // Hide loader and show notification\n    hideLoader();\n    showNotification(\"Image generation cancelled.\", \"success\");\n    \n    // Re-enable generate button\n    const generateButton = document.getElementById(\"run\");\n    generateButton.disabled = false;\n  }\n}\n\n// Update generateImage function to handle login if not authenticated\nasync function generateImage() {\n  try {\n    // Check if user is authenticated\n    if (authManager.isTokenExpired()) {\n      // If not authenticated, handle login first\n      showLoader(\"Authenticating...\", false);\n      const authResult = await authManager.authenticate();\n      \n      if (!authResult.success) {\n        hideLoader();\n        showError(`Authentication failed: ${authResult.error}`);\n        return;\n      }\n      \n      // Authentication successful, continue with image generation or editing\n      hideLoader();\n      showSuccess(\"Authentication successful!\");\n      updateAuthUI(true);\n    }\n    \n    // Now proceed with image generation or editing\n    const userId = authManager.getUserId();\n    \n    if (!userId) {\n      showError(\"User ID not available. Please try logging in again.\");\n      return;\n    }\n    \n    const isPremium = await checkPremiumStatus(userId);\n    const promptText = document.querySelector(\".input-field\").value.trim();\n    \n    if (!promptText) {\n      if (isImageEditingMode) {\n        showError(\"Please enter instructions for editing the image.\");\n      } else {\n        showError(\"Please enter a prompt for the image generation.\");\n      }\n      return;\n    }\n\n    // Check if we're in image editing mode\n    if (isImageEditingMode && (uploadedFile || capturedImageData)) {\n      await editImage(userId, isPremium, promptText);\n    } else {\n      // Original image generation logic\n      const purposeSelect = document.getElementById(\"image-purpose-select\");\n\n      if (!purposeSelect.value) {\n        showError(\"Please select an image purpose.\");\n        return;\n      }\n      \n      await generateNewImage(userId, isPremium, promptText, purposeSelect.value);\n    }\n\n  } catch (error) {\n    console.error(\"Detailed error in generateImage:\", {\n      error: error,\n      message: error.message,\n      stack: error.stack\n    });\n    hideLoader();\n    \n    let errorMessage = \"An error occurred while processing the image.\";\n    if (error.name === 'AbortError') {\n      errorMessage = \"Image processing was cancelled.\";\n    } else if (error.message.includes(\"HTTP error\")) {\n      errorMessage = \"Failed to connect to the image processing service. Please try again later.\";\n    } else if (error.name === \"TypeError\" && error.message.includes(\"fetch\")) {\n      errorMessage = \"Network error. Please check your internet connection.\";\n    }\n    \n    showError(errorMessage);\n    \n    // Reset button state\n    const generateButton = document.getElementById(\"run\");\n    generateButton.disabled = false;\n  }\n}\n\n// New function to handle image editing\nasync function editImage(userId, isPremium, promptText) {\n  console.log(\"Starting image editing process\");\n  \n  // Check tokens before editing\n  console.log(\"Checking tokens before editing for user:\", userId);\n  \n  const tokenResponse = await fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`, {\n    method: \"GET\"\n  });\n\n  console.log(\"Pre-editing token check status:\", tokenResponse.status);\n\n  if (!tokenResponse.ok) {\n    throw new Error(`HTTP error! status: ${tokenResponse.status}`);\n  }\n\n  const tokenData = await tokenResponse.json();\n  console.log(\"Pre-editing token check response:\", tokenData);\n  \n  console.log(\"User premium status:\", isPremium);\n  console.log(\"Available video tokens:\", tokenData.credits?.videos);\n  \n  if (!isPremium && (!tokenData.credits || !tokenData.credits.videos || tokenData.credits.videos < 1)) {\n    console.log(\"Token check failed:\", {\n      hasCredits: !!tokenData.credits,\n      videoTokens: tokenData.credits?.videos\n    });\n    showError(\"Insufficient tokens. Please get more credits to continue.\");\n    return;\n  }\n\n  // Show loader and disable generate button\n  showLoader(\"Editing your image...\");\n  const generateButton = document.getElementById(\"run\");\n  generateButton.disabled = true;\n\n  // Create AbortController for the request\n  currentGenerationController = new AbortController();\n\n  // Create FormData for image editing\n  const editFormData = new FormData();\n  editFormData.append('prompt', promptText);\n  editFormData.append('user_id', userId);\n  editFormData.append('isPro', isPremium ? '1' : '0');\n\n  // Add the image file to the form data\n  if (uploadedFile) {\n    editFormData.append('file', uploadedFile);\n    console.log(\"Using uploaded file for editing:\", uploadedFile.name);\n  } else if (capturedImageData) {\n    // Convert captured image data to blob and add to form data\n    const blob = await convertImageDataToBlob(capturedImageData);\n    editFormData.append('file', blob, 'captured_image.png');\n    console.log(\"Using captured image data for editing\");\n  } else {\n    throw new Error(\"No image available for editing\");\n  }\n\n  console.log(\"Sending image editing request:\", {\n    isPro: isPremium ? '1' : '0',\n    user_id: userId,\n    prompt: promptText,\n    hasFile: !!(uploadedFile || capturedImageData),\n    endpoint: \"https://shorts.multiplewords.com/mwvideos/api/edit_image_from_text\"\n  });\n\n  const response = await fetch(\"https://shorts.multiplewords.com/mwvideos/api/edit_image_from_text\", {\n    method: \"POST\",\n    body: editFormData,\n    signal: currentGenerationController.signal\n  });\n\n  console.log(\"Image editing response status:\", response.status);\n  \n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const data = await response.json();\n  console.log(\"Image editing full response:\", data);\n\n  if (data.status === 1 && data.edited_image_url) {\n    console.log(\"Successfully received edited image URL:\", data.edited_image_url);\n    // Update loader message\n    showLoader(\"Inserting edited image into document...\");\n    // Insert the edited image into the document\n    await insertImageToDocument(data.edited_image_url);\n    hideLoader();\n    showSuccess(\"Image edited and inserted successfully!\");\n    // Update token count after successful editing\n    if (!isPremium) {\n      console.log(\"Updating tokens after editing for non-premium user\");\n      checkTokens();\n    }\n  } else {\n    hideLoader();\n    console.error(\"Invalid API response:\", {\n      status: data.status,\n      hasEditedImageUrl: !!data.edited_image_url\n    });\n    const errorMsg = data.msg || data.message || \"Failed to edit image. Please try again.\";\n    showError(errorMsg);\n  }\n\n  // Reset button state\n  generateButton.disabled = false;\n}\n\n// New function to handle original image generation\nasync function generateNewImage(userId, isPremium, promptText, imagePurpose) {\n  console.log(\"Starting image generation process\");\n  \n  // Check tokens before generating\n  console.log(\"Checking tokens before generation for user:\", userId);\n  \n  const tokenResponse = await fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`, {\n    method: \"GET\"\n  });\n\n  console.log(\"Pre-generation token check status:\", tokenResponse.status);\n\n  if (!tokenResponse.ok) {\n    throw new Error(`HTTP error! status: ${tokenResponse.status}`);\n  }\n\n  const tokenData = await tokenResponse.json();\n  console.log(\"Pre-generation token check response:\", tokenData);\n  \n  console.log(\"User premium status:\", isPremium);\n  console.log(\"Available video tokens:\", tokenData.credits?.videos);\n  \n  if (!isPremium && (!tokenData.credits || !tokenData.credits.videos || tokenData.credits.videos < 1)) {\n    console.log(\"Token check failed:\", {\n      hasCredits: !!tokenData.credits,\n      videoTokens: tokenData.credits?.videos\n    });\n    showError(\"Insufficient tokens. Please get more credits to continue.\");\n    return;\n  }\n\n  // Show loader and disable generate button\n  showLoader(\"Generating your image...\");\n  const generateButton = document.getElementById(\"run\");\n  generateButton.disabled = true;\n\n  // Create AbortController for the request\n  currentGenerationController = new AbortController();\n\n  // Create FormData for image generation\n  const imageFormData = new FormData();\n  imageFormData.append('isPro', isPremium ? '1' : '0');\n  imageFormData.append('user_id', userId);\n  imageFormData.append('prompt', promptText);\n  imageFormData.append('purpose', imagePurpose);\n\n  console.log(\"Sending image generation request:\", {\n    isPro: isPremium ? '1' : '0',\n    user_id: userId,\n    prompt: promptText,\n    purpose: imagePurpose,\n    endpoint: \"https://shorts.multiplewords.com/mwvideos/api/generate_image\"\n  });\n\n  const response = await fetch(\"https://shorts.multiplewords.com/mwvideos/api/generate_image\", {\n    method: \"POST\",\n    body: imageFormData,\n    signal: currentGenerationController.signal\n  });\n\n  console.log(\"Image generation response status:\", response.status);\n  \n  if (!response.ok) {\n    throw new Error(`HTTP error! status: ${response.status}`);\n  }\n\n  const data = await response.json();\n  console.log(\"Image generation full response:\", data);\n\n  if (data.status === 1 && data.generated_image && data.generated_image.image_url) {\n    console.log(\"Successfully received image URL:\", data.generated_image.image_url);\n    // Update loader message\n    showLoader(\"Inserting image into document...\");\n    // Insert the generated image into the document\n    await insertImageToDocument(data.generated_image.image_url);\n    hideLoader();\n    showSuccess(\"Image generated and inserted successfully!\");\n    // Update token count after successful generation\n    if (!isPremium) {\n      console.log(\"Updating tokens after generation for non-premium user\");\n      checkTokens();\n    }\n  } else {\n    hideLoader();\n    console.error(\"Invalid API response:\", {\n      status: data.status,\n      hasGeneratedImage: !!data.generated_image,\n      hasImageUrl: data.generated_image?.image_url\n    });\n    const errorMsg = data.msg || data.message || \"Failed to generate image. Please try again.\";\n    showError(errorMsg);\n  }\n\n  // Reset button state\n  generateButton.disabled = false;\n}\n\n// Helper function to convert captured image data to blob\nasync function convertImageDataToBlob(imageData) {\n  try {\n    // If imageData is already a base64 string, convert it to blob\n    if (typeof imageData === 'string') {\n      const base64Data = imageData.includes(',') ? imageData.split(',')[1] : imageData;\n      const byteCharacters = atob(base64Data);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      return new Blob([byteArray], { type: 'image/png' });\n    }\n    \n    // If imageData is already a blob or file, return as is\n    if (imageData instanceof Blob) {\n      return imageData;\n    }\n    \n    // If imageData is an ArrayBuffer, convert to blob\n    if (imageData instanceof ArrayBuffer) {\n      return new Blob([imageData], { type: 'image/png' });\n    }\n    \n    throw new Error(\"Unsupported image data format\");\n  } catch (error) {\n    console.error(\"Error converting image data to blob:\", error);\n    throw new Error(\"Failed to process captured image data\");\n  }\n}\n\nasync function insertImageToDocument(imageUrl) {\n  try {\n    const base64Image = await fetchImageAsBase64(imageUrl);\n    \n    return new Promise((resolve, reject) => {\n      Office.onReady((info) => {\n        try {\n          switch (info.host) {\n            case Office.HostType.Word:\n              Word.run(async (context) => {\n                const range = context.document.getSelection();\n                range.insertInlinePictureFromBase64(base64Image, \"Replace\");\n                await context.sync();\n                resolve();\n              });\n              break;\n              \n            case Office.HostType.Excel:\n              Excel.run(async (context) => {\n                const range = context.workbook.getSelectedRange();\n                const shape = range.worksheet.shapes.addImage(base64Image);\n                shape.width = 300; // Set default width\n                shape.height = 300; // Set default height\n                await context.sync();\n                resolve();\n              });\n              break;\n              \n            case Office.HostType.PowerPoint:\n              // Use setSelectedDataAsync for PowerPoint\n              Office.context.document.setSelectedDataAsync(base64Image, {\n                coercionType: Office.CoercionType.Image,\n                imageLeft: 100,    // Position from the left in points\n                imageTop: 100,     // Position from the top in points\n                imageWidth: 300,   // Width in points\n                imageHeight: 300   // Height in points\n              }, function(asyncResult) {\n                if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n                  console.log('Image inserted successfully in PowerPoint');\n                  resolve();\n                } else {\n                  console.error('Failed to insert image in PowerPoint:', asyncResult.error.message);\n                  reject(new Error(asyncResult.error.message));\n                }\n              });\n              break;\n              \n            default:\n              reject(new Error(\"Unsupported Office application\"));\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  } catch (error) {\n    console.error(\"Error inserting image:\", error);\n    throw error;\n  }\n}\n\n// Helper function to create a temporary file from base64\nasync function createTempFileFromBase64(base64Data) {\n  try {\n    // Convert base64 to blob\n    const byteCharacters = atob(base64Data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], { type: 'image/png' });\n\n    // Create a temporary file\n    const tempFile = new File([blob], 'temp_image.png', { type: 'image/png' });\n    return tempFile;\n  } catch (error) {\n    console.error(\"Error creating temporary file:\", error);\n    throw error;\n  }\n}\n\nasync function fetchImageAsBase64(imageUrl) {\n  try {\n    console.log(\"Fetching image from URL:\", imageUrl);\n    const response = await fetch(imageUrl);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch image: ${response.status} ${response.statusText}`);\n    }\n    \n    const blob = await response.blob();\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        try {\n          // Get only the base64 data part\n          const base64String = reader.result.split(',')[1];\n          // Verify we have valid base64 data\n          if (!base64String) {\n            reject(new Error(\"Failed to get valid base64 data from image\"));\n            return;\n          }\n          console.log(\"Image successfully converted to base64\");\n          resolve(base64String);\n        } catch (error) {\n          console.error(\"Error processing base64 data:\", error);\n          reject(error);\n        }\n      };\n      reader.onerror = (error) => {\n        console.error(\"Error converting image to base64:\", error);\n        reject(error);\n      };\n      reader.readAsDataURL(blob);\n    });\n  } catch (error) {\n    console.error(\"Error in fetchImageAsBase64:\", error);\n    throw new Error(\"Failed to process the generated image: \" + error.message);\n  }\n}\n\n// Update getMoreCredits function to use dialog instead of new tab\nasync function getMoreCredits() {\n  console.log('💳 getMoreCredits function called');\n  \n  try {\n    const userId = authManager.getUserId();\n    if (!userId) {\n      console.log('❌ No user ID available');\n      showError(\"Authentication required. Please sign in first.\");\n      return;\n    }\n\n    console.log('👤 User ID:', userId);\n\n    // Get initial state (tokens and premium status)\n    console.log('🔄 Fetching initial token count and premium status...');\n    const [initialTokenResponse, initialPremiumStatus] = await Promise.all([\n      fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`),\n      checkPremiumStatus(userId)\n    ]);\n\n    if (!initialTokenResponse.ok) {\n      throw new Error('Failed to get initial token count');\n    }\n\n    const initialData = await initialTokenResponse.json();\n    const initialTokens = initialData.credits?.videos || 0;\n    \n    console.log('📊 Initial state captured:', {\n      tokens: initialTokens,\n      isPremium: initialPremiumStatus\n    });\n    \n    // Show loader with purchase message and set it as not a generation operation\n    console.log('🔄 Showing initial loader');\n    showLoader(\"Processing your purchase...\", false);\n    \n    // Open the pricing page in a dialog instead of a new window\n    try {\n      console.log('🌐 Opening credits dialog...');\n      const result = await authManager.openCreditsDialog(userId);\n      console.log(\"💳 Credits dialog result:\", result);\n      \n      // Don't hide the loader here - keep it showing during the purchase check\n      \n      // Check if the purchase was successful\n      if (result.success) {\n        console.log('✅ Dialog indicates success, starting purchase check...');\n        // Start polling for changes to token count - this will handle hiding the loader\n        startPurchaseCheck(userId, initialTokens, initialPremiumStatus);\n      } else {\n        console.log('❌ Dialog indicates no purchase or cancellation');\n        // Dialog was cancelled or closed without a purchase\n        hideLoader();\n        showNotification(\"Purchase cancelled or completed.\", \"info\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error opening credits dialog:\", error);\n      showError(\"Failed to open credits purchase page. Please try again.\");\n      hideLoader();\n      return;\n    }\n  } catch (error) {\n    console.error(\"❌ Error in getMoreCredits:\", error);\n    showError(\"An error occurred while processing your request. Please try again.\");\n    hideLoader();\n  }\n}\n\n// Helper function to start checking for purchase completion\nfunction startPurchaseCheck(userId, initialTokens, initialPremiumStatus) {\n  console.log('🔄 startPurchaseCheck called with:', {\n    userId,\n    initialTokens,\n    initialPremiumStatus\n  });\n  \n  // Clear any existing interval\n  if (purchaseCheckInterval) {\n    console.log('🗑️ Clearing existing purchase check interval:', purchaseCheckInterval);\n    clearInterval(purchaseCheckInterval);\n    purchaseCheckInterval = null;\n  }\n  \n  let hasUpdated = false; // Flag to track if we've already handled the update\n  let checkCount = 0; // Counter for debugging\n  \n  // Ensure loader is showing during the check\n  console.log('🔄 Showing loader for purchase check');\n  showLoader(\"Checking for purchase completion...\", false);\n\n  // Start polling for changes\n  console.log('⏰ Starting purchase check interval (every 3 seconds)');\n  purchaseCheckInterval = setInterval(async () => {\n    checkCount++;\n    console.log(`🔍 Purchase check #${checkCount} triggered, hasUpdated:`, hasUpdated);\n    console.log('🔍 Current interval ID:', purchaseCheckInterval);\n    \n    if (hasUpdated) {\n      console.log('⏭️ Skipping check - already updated');\n      return; // Skip if we've already handled the update\n    }\n\n    try {\n      console.log('🌐 Fetching current token count and premium status...');\n      \n      // Check both token count and premium status\n      const [tokenResponse, newPremiumStatus] = await Promise.all([\n        fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`),\n        checkPremiumStatus(userId)\n      ]);\n      \n      if (!tokenResponse.ok) {\n        console.error('❌ Token response not OK:', tokenResponse.status);\n        throw new Error('Failed to get current token count');\n      }\n\n      const tokenData = await tokenResponse.json();\n      const currentTokens = tokenData.credits?.videos || 0;\n      \n      console.log('📊 Purchase status check results:', {\n        checkNumber: checkCount,\n        initialTokens,\n        currentTokens,\n        initialPremiumStatus,\n        newPremiumStatus,\n        tokenDiff: currentTokens - initialTokens,\n        tokenIncreased: currentTokens > initialTokens,\n        becamePremium: (!initialPremiumStatus && newPremiumStatus),\n        shouldStop: (currentTokens > initialTokens) || (!initialPremiumStatus && newPremiumStatus)\n      });\n      \n      // Stop checking if either tokens increased or user became premium\n      if (currentTokens > initialTokens || (!initialPremiumStatus && newPremiumStatus)) {\n        console.log('🎉 Purchase detected! Stopping check and hiding loader');\n        console.log('🛑 Setting hasUpdated to true');\n        hasUpdated = true; // Set flag to prevent multiple updates\n        \n        console.log('🗑️ Clearing interval:', purchaseCheckInterval);\n        clearInterval(purchaseCheckInterval);\n        purchaseCheckInterval = null;\n        \n        console.log('🔄 Hiding loader');\n        hideLoader();\n        \n        if (newPremiumStatus && !initialPremiumStatus) {\n          console.log('✨ User became premium');\n          showSuccess(\"Premium status activated successfully!\");\n        } else if (currentTokens > initialTokens) {\n          console.log('🪙 Tokens increased from', initialTokens, 'to', currentTokens);\n          showSuccess(`Credits added successfully! (${currentTokens - initialTokens} tokens added)`);\n        }\n        \n        // Update token display\n        console.log('🔄 Updating token display after purchase');\n        await checkTokens();\n      } else {\n        console.log('⏳ No purchase detected yet, continuing to check...');\n        console.log('🔍 Will check again in 3 seconds...');\n      }\n    } catch (error) {\n      console.error(\"❌ Error checking purchase status:\", error);\n      // Don't stop polling on error, just log it\n    }\n  }, 3000); // Check every 3 seconds\n  \n  console.log('✅ Purchase check interval created with ID:', purchaseCheckInterval);\n  \n  // Set a timeout to stop checking after 5 minutes\n  console.log('⏰ Setting 5-minute timeout for purchase check');\n  setTimeout(() => {\n    console.log('⏰ Purchase check timeout reached');\n    if (purchaseCheckInterval && !hasUpdated) {\n      console.log('⏰ Timeout: Clearing interval and hiding loader');\n      clearInterval(purchaseCheckInterval);\n      purchaseCheckInterval = null;\n      hideLoader();\n      showNotification(\"Purchase status check timed out. Please refresh if you completed the purchase.\", \"error\");\n    } else {\n      console.log('⏰ Timeout: But purchase was already detected or interval was cleared');\n    }\n  }, 5 * 60 * 1000); // 5 minutes timeout\n}\n\n// Clean up interval when the page is unloaded\nwindow.addEventListener('unload', () => {\n  if (purchaseCheckInterval) {\n    clearInterval(purchaseCheckInterval);\n    purchaseCheckInterval = null;\n  }\n});\n\nfunction showNotification(message, type) {\n  const notification = document.getElementById(\"notification\");\n  notification.textContent = message;\n  notification.className = `notification ${type}`;\n  notification.style.display = \"block\";\n\n  // Hide the notification after 3 seconds\n  setTimeout(() => {\n    notification.style.display = \"none\";\n  }, 3000);\n}\n\nfunction showError(message) {\n  showNotification(message, \"error\");\n}\n\nfunction showSuccess(message) {\n  showNotification(message, \"success\");\n}\n\n// Handle logout\nfunction handleLogout() {\n  console.log(\"Logout button clicked\");\n  authManager.logout();\n  updateAuthUI(false);\n  showSuccess(\"Logged out successfully\");\n}\n\n// Add function to clear uploaded image\nfunction clearUploadedImage() {\n  uploadedFile = null;\n  capturedImageData = null;\n  isImageEditingMode = false;\n  \n  const uploadArea = document.getElementById(\"uploadArea\");\n  const uploadContent = uploadArea.querySelector(\".upload-content\");\n  const clearButton = document.getElementById(\"clearUpload\");\n  \n  // Reset upload area to default state\n  uploadContent.innerHTML = `\n    <div class=\"upload-icon\">📁</div>\n    <div class=\"upload-text\">Click to upload an image</div>\n  `;\n  uploadArea.style.borderColor = \"#C8C6C4\";\n  uploadArea.style.background = \"#FAFAFA\";\n  \n  // Hide clear button\n  clearButton.style.display = \"none\";\n  \n  // Reset file input\n  const fileInput = document.getElementById(\"fileInput\");\n  fileInput.value = \"\";\n  \n  // Update button text to indicate generation mode\n  const generateButton = document.getElementById(\"run\");\n  const generateButtonLabel = generateButton.querySelector('.ms-Button-label');\n  if (!authManager || authManager.isTokenExpired()) {\n    generateButtonLabel.textContent = 'Sign in to Generate';\n  } else {\n    generateButtonLabel.textContent = 'Generate';\n  }\n  \n  showSuccess(\"Switched back to image generation mode!\");\n}\n\n// Add function to cancel purchase check\nfunction cancelPurchaseCheck() {\n  if (purchaseCheckInterval) {\n    clearInterval(purchaseCheckInterval);\n    purchaseCheckInterval = null;\n    hideLoader();\n    showNotification(\"Purchase check cancelled. Please refresh if you completed the purchase.\", \"info\");\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./services/auth-manager.js\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Image Editor</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <div id=\\\"notification\\\" class=\\\"notification\\\"></div> <header class=\\\"ms-welcome__header\\\"> <div class=\\\"header-top\\\"> <h1>Image Editor</h1> <button id=\\\"logoutButton\\\" class=\\\"ms-Button ms-Button--icon\\\" style=\\\"display:none\\\"> <span class=\\\"ms-Button-icon\\\">⏻</span> </button> </div> <p class=\\\"value-proposition\\\">Transform and enhance images instantly with AI-powered editing. Generate professional images from text or edit existing ones directly in your Office documents.</p> <p class=\\\"account-benefits\\\" id=\\\"account-benefits\\\" style=\\\"display:none\\\">Sign in to unlock unlimited credits and access premium AI image editing features.</p> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <div class=\\\"content-area\\\"> <div class=\\\"upload-area\\\" id=\\\"uploadArea\\\"> <div class=\\\"upload-content\\\"> <div class=\\\"upload-icon\\\">📁</div> <div class=\\\"upload-text\\\">Click to upload an image</div> </div> <button class=\\\"clear-upload-btn\\\" id=\\\"clearUpload\\\" style=\\\"display:none\\\"> <span>✕</span> </button> <input type=\\\"file\\\" id=\\\"fileInput\\\" accept=\\\"image/*\\\" style=\\\"display:none\\\"> </div> <button type=\\\"button\\\" id=\\\"getImageFromDoc\\\" class=\\\"ms-Button ms-Button--secondary get-image-button\\\"> <span class=\\\"ms-Button-label\\\">Get Image from Document</span> </button> <div class=\\\"input-wrapper\\\"> <textarea class=\\\"input-field\\\" placeholder=\\\"Enter your text here...\\\" rows=\\\"6\\\"></textarea> </div> <button type=\\\"button\\\" id=\\\"run\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero\\\"> <span class=\\\"ms-Button-label\\\">Generate</span> </button> </div> <div class=\\\"credits-footer\\\"> <div class=\\\"credits-display\\\"> <span>Available Credits: <span id=\\\"token-display\\\">0</span></span> <button id=\\\"get-more-credits\\\" class=\\\"ms-Button ms-Button--small\\\"> <span class=\\\"ms-Button-label\\\">Get More Credits</span> </button> </div> </div> <div id=\\\"loader\\\" class=\\\"loader-container\\\"> <div class=\\\"loader-spinner\\\"></div> <div class=\\\"loader-text\\\">Generating your image...</div> <div id=\\\"auth-loading-content\\\" class=\\\"auth-loading-content\\\"> <div class=\\\"auth-loading-step active\\\" data-step=\\\"1\\\"> <h3>Connecting to authentication server...</h3> <p>Establishing a secure connection to verify your identity.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"2\\\"> <h3>Preparing your session...</h3> <p>Setting up your personalized workspace with all your preferences.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"3\\\"> <h3>Almost there!</h3> <p>Just a few more seconds to complete the authentication process.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"4\\\"> <h3>Finalizing your login...</h3> <p>We're making sure everything is secure and ready for you.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"5\\\"> <h3>Just a moment more...</h3> <p>We're almost done setting up your account.</p> </div> <div class=\\\"auth-progress\\\"> <div class=\\\"auth-progress-dot active\\\" data-step=\\\"1\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"2\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"3\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"4\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"5\\\"></div> </div> </div> <button id=\\\"cancel-generation\\\" class=\\\"ms-Button ms-Button--danger\\\"> <span class=\\\"ms-Button-label\\\">Cancel Generation</span> </button> </div> </main> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_slicedToArray","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","_unsupportedIterableToArray","_nonIterableRest","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","authManager","uploadedFile","capturedImageData","isImageEditingMode","getImageFromDocument","_getImageFromDocument","_callee2","hostType","_context2","console","log","showLoader","Office","context","host","t0","HostType","Word","Excel","PowerPoint","getImageFromWord","getImageFromExcel","getImageFromPowerPoint","error","hideLoader","showError","t1","_getImageFromWord","_callee5","_context5","run","_ref2","_callee4","range","inlineShapes","image","base64Result","paragraph","allInlineShapes","firstImage","_firstImage","paragraphs","_paragraph","paragraphImages","paragraphImage","_context4","getSelection","inlinePictures","load","sync","items","base64ImageSrc","concat","width","height","altTextTitle","altTextDescription","processWordImage","getBase64ImageSrc","getSelectedDataAsync","CoercionType","Image","imageLeft","imageTop","imageWidth","imageHeight","_ref3","_callee3","result","base64Data","_context3","status","hasValue","valueType","valueLength","AsyncResultStatus","Succeeded","startsWith","split","_x18","warn","getFirst","body","message","select","t2","t3","t4","_x17","stack","_x","_x2","_processWordImage","_callee6","fileName","byteCharacters","byteArrays","offset","byteNumbers","byteArray","blob","file","_context6","atob","charCodeAt","Uint8Array","Blob","File","size","updateUploadSectionWithFile","showSuccess","_getImageFromExcel","_callee8","_context8","_ref4","_callee7","worksheet","shapes","imageShape","shape","_context7","workbook","worksheets","getActiveWorksheet","_x19","_getImageFromPowerPoint","_callee11","_context11","_ref5","_callee9","selection","slides","currentSlide","imageCount","imageShapes","_shape","_context9","presentation","getSelectedShapes","id","ShapeType","picture","String","toLowerCase","index","map","img","join","shapeType","shapeTypeString","expectedEnum","expectedEnumString","_x20","reject","_ref6","_callee10","_context10","processPowerPointImage","_x21","includes","_x3","_x4","_processPowerPointImage","_callee12","_context12","imageDataUrl","_authManager2","fileSize","fileType","hasImageDataUrl","uploadArea","getElementById","uploadContent","querySelector","clearButton","innerHTML","style","borderColor","background","display","generateButton","generateButtonLabel","isAuthenticated","isTokenExpired","textContent","updateAuthUI","logoutButton","runButton","getMoreCreditsButton","tokenDisplay","accountBenefits","creditsFooter","visibility","disabled","classList","remove","onReady","info","OfficeAuthManager","opacity","onclick","generateImage","getMoreCredits","cancelGeneration","handleLogout","event","target","closest","fileInput","click","onchange","files","reader","FileReader","onload","_authManager","onerror","readAsDataURL","_file$type","isImage","handleFileUpload","clearUploadedImage","checkTokens","userId","sessionStorage","getItem","accessToken","substring","checkAuthStatus","tokenCheckInterval","setInterval","addEventListener","clearInterval","currentAuthProcess","cancelAuthentication","_cancelAuthentication","_callee14","_context14","cancelAuth","showNotification","cancelCreditsDialog","_cancelCreditsDialog","_callee15","_context15","isGenerating","loader","loaderText","cancelButton","authLoadingContent","add","steps","querySelectorAll","dots","currentStep","updateActiveStep","step","dot","authLoadingInterval","startAuthLoadingAnimation","currentGenerationController","purchaseCheckInterval","checkPremiumStatus","_x5","_checkPremiumStatus","_callee16","_data$user_info","response","data","userRecord","isPremium","_context16","fetch","ok","statusText","json","user_info","find","user","user_id","parseInt","is_user_paid","_checkTokens","_callee17","tokenCount","_context17","tokenDisplayElement","currentTokenText","getUserId","credits","cssText","videos","_cancelGeneration","_callee18","_context18","abort","_generateImage","_callee19","authResult","promptText","purposeSelect","errorMessage","_context19","authenticate","success","trim","editImage","generateNewImage","_x6","_x7","_x8","_editImage","_callee20","_tokenData$credits2","tokenResponse","tokenData","_tokenData$credits3","editFormData","_context20","hasCredits","videoTokens","AbortController","FormData","append","convertImageDataToBlob","isPro","prompt","hasFile","endpoint","signal","edited_image_url","insertImageToDocument","hasEditedImageUrl","msg","_x9","_x10","_x11","_x12","_generateNewImage","_callee21","imagePurpose","_tokenData$credits4","_tokenData$credits5","imageFormData","_data$generated_image","_context21","purpose","generated_image","image_url","hasGeneratedImage","hasImageUrl","_x13","_convertImageDataToBlob","_callee22","imageData","_context22","ArrayBuffer","_x14","_insertImageToDocument","_callee25","imageUrl","base64Image","_context25","fetchImageAsBase64","_ref7","_callee23","_context23","insertInlinePictureFromBase64","_x22","_ref8","_callee24","_context24","getSelectedRange","addImage","_x23","setSelectedDataAsync","coercionType","asyncResult","_x16","_fetchImageAsBase","_callee27","_context27","onloadend","base64String","_getMoreCredits","_callee28","_initialData$credits","_yield$Promise$all3","_yield$Promise$all4","initialTokenResponse","initialPremiumStatus","initialData","initialTokens","_context28","all","tokens","openCreditsDialog","startPurchaseCheck","hasUpdated","checkCount","_callee","_tokenData$credits","_yield$Promise$all","_yield$Promise$all2","newPremiumStatus","currentTokens","_context","checkNumber","tokenDiff","tokenIncreased","becamePremium","shouldStop","setTimeout","notification","className","logout","debugStopPurchaseCheck","debugPurchaseCheckState","intervalIsActive","intervalId","active","URL"],"sourceRoot":""}