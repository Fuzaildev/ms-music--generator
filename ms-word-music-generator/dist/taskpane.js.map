{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, PowerPoint */\n\n// Initialize auth manager\nlet authManager = null;\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.PowerPoint) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    \n    // Initialize auth manager\n    authManager = new OfficeAuthManager();\n    \n    // Ensure generate button is visible\n    const runButton = document.getElementById(\"run\");\n    if (runButton) {\n      runButton.style.display = \"flex\";\n      runButton.style.visibility = \"visible\";\n      runButton.style.opacity = \"1\";\n    }\n    \n    // Set up event listeners\n    document.getElementById(\"run\").onclick = generateImage;\n    document.querySelector(\".enhance-button\").onclick = enhancePrompt;\n    document.getElementById(\"get-more-credits\").onclick = getMoreCredits;\n    document.getElementById(\"cancel-generation\").onclick = cancelGeneration;\n    document.getElementById(\"logoutButton\").onclick = handleLogout;\n    document.getElementById(\"download-music\").onclick = downloadGeneratedMusic;\n\n    // Set up duration slider\n    const durationSlider = document.getElementById(\"duration-slider\");\n    const durationInput = document.getElementById(\"duration-input\");\n    \n    if (durationSlider && durationInput) {\n      // Update input when slider changes\n      durationSlider.addEventListener('input', (e) => {\n        const value = parseInt(e.target.value);\n        durationInput.value = value;\n      });\n\n      // Update slider when input changes\n      durationInput.addEventListener('input', (e) => {\n        let value = parseInt(e.target.value);\n        \n        // Enforce min/max constraints\n        if (value < 1) value = 1;\n        if (value > 20) value = 20;\n        \n        durationSlider.value = value;\n        durationInput.value = value;\n      });\n\n      // Validate input on blur\n      durationInput.addEventListener('blur', (e) => {\n        let value = parseInt(e.target.value);\n        \n        // If empty or invalid, reset to default\n        if (isNaN(value) || value === '') {\n          value = 15;\n        }\n        \n        // Enforce min/max constraints\n        if (value < 1) value = 1;\n        if (value > 20) value = 20;\n        \n        durationSlider.value = value;\n        durationInput.value = value;\n      });\n\n      // Initialize with default value\n      durationInput.value = durationSlider.value;\n    }\n\n    // Initial token check\n    checkTokens();\n    \n    // Check authentication status\n    checkAuthStatus();\n\n    // Set up interval for token checking every 3 seconds\n    const tokenCheckInterval = setInterval(checkTokens, 3000);\n\n    // Clean up interval when the page is unloaded\n    window.addEventListener('unload', () => {\n      if (tokenCheckInterval) {\n        clearInterval(tokenCheckInterval);\n      }\n    });\n  }\n});\n\n// Check authentication status\nfunction checkAuthStatus() {\n  if (!authManager) {\n    return;\n  }\n  \n  const isAuthenticated = !authManager.isTokenExpired();\n  updateAuthUI(isAuthenticated);\n}\n\n// Update authentication UI\nfunction updateAuthUI(isAuthenticated) {\n  const logoutButton = document.getElementById('logoutButton');\n  const runButton = document.getElementById('run');\n  const enhanceButton = document.querySelector('.enhance-button');\n  const getMoreCreditsButton = document.getElementById('get-more-credits');\n  const generateButtonLabel = runButton.querySelector('.ms-Button-label');\n  \n  if (isAuthenticated) {\n    logoutButton.style.display = 'inline-block';\n    runButton.style.display = 'flex';\n    runButton.style.visibility = 'visible';\n    runButton.disabled = false;\n    generateButtonLabel.textContent = 'Generate Music';\n    enhanceButton.disabled = false;\n    getMoreCreditsButton.disabled = false;\n  } else {\n    logoutButton.style.display = 'none';\n    runButton.style.display = 'flex';\n    runButton.style.visibility = 'visible';\n    runButton.disabled = false;\n    generateButtonLabel.textContent = 'Sign in to Generate Music';\n    enhanceButton.disabled = false;\n    getMoreCreditsButton.disabled = true;\n  }\n}\n\n// Add variable to track current authentication process\nlet currentAuthProcess = null;\n\n// Handle login\nasync function handleLogin() {\n  try {\n    showLoader(\"Authenticating...\", false);\n    \n    // Store the authentication promise\n    currentAuthProcess = authManager.authenticate();\n    const result = await currentAuthProcess;\n    currentAuthProcess = null;\n    \n    if (result.success) {\n      showSuccess(\"Authentication successful!\");\n      updateAuthUI(true);\n    } else {\n      // Provide more specific error messages based on the error type\n      let errorMessage = result.error;\n      \n      if (errorMessage.includes(\"Popup was blocked\")) {\n        errorMessage = \"Your browser blocked the authentication popup. Please follow the instructions in the modal.\";\n      } else if (errorMessage.includes(\"Authentication cancelled by user\")) {\n        errorMessage = \"Authentication was cancelled.\";\n      } else if (errorMessage.includes(\"Authentication timed out\")) {\n        errorMessage = \"Authentication timed out. Please try again.\";\n      } else if (errorMessage.includes(\"State mismatch\")) {\n        errorMessage = \"Security verification failed. Please try again.\";\n      }\n      \n      showError(`Authentication failed: ${errorMessage}`);\n      updateAuthUI(false);\n    }\n  } catch (error) {\n    showError(`Error: ${error.message}`);\n    updateAuthUI(false);\n  } finally {\n    // Always hide the loader and reset the current process\n    hideLoader();\n    currentAuthProcess = null;\n  }\n}\n\n// Add cancel authentication function\nasync function cancelAuthentication() {\n  if (authManager) {\n    authManager.cancelAuth();\n  }\n  if (currentAuthProcess) {\n    currentAuthProcess = null;\n  }\n  hideLoader();\n  showNotification(\"Authentication cancelled.\", \"info\");\n  updateAuthUI(false);\n}\n\n// Add cancel credits dialog function\nasync function cancelCreditsDialog() {\n  hideLoader();\n  showNotification(\"Purchase cancelled.\", \"info\");\n}\n\n// Update showLoader function to handle authentication cancellation\nfunction showLoader(message = \"Generating your image...\", isGenerating = true) {\n  const loader = document.getElementById(\"loader\");\n  const loaderText = loader.querySelector(\".loader-text\");\n  const cancelButton = document.getElementById(\"cancel-generation\");\n  const authLoadingContent = document.getElementById(\"auth-loading-content\");\n  \n  loaderText.textContent = message;\n  loader.classList.add(\"active\");\n  \n  // Show appropriate cancel button text based on the operation\n  if (cancelButton) {\n    if (isGenerating) {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel Generation\";\n      cancelButton.onclick = cancelGeneration;\n    } else if (message.includes(\"Authenticating\")) {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel\";\n      cancelButton.onclick = cancelAuthentication;\n    } else if (message.includes(\"purchase\")) {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel\";\n      cancelButton.onclick = cancelCreditsDialog;\n    } else {\n      cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel\";\n      cancelButton.onclick = cancelCreditsDialog;\n    }\n  }\n  \n  // Handle authentication loading experience\n  if (!isGenerating && message.includes(\"Authenticating\")) {\n    // Show the auth loading content\n    authLoadingContent.style.display = \"block\";\n    loaderText.style.display = \"none\";\n    \n    // Start the animated loading steps\n    startAuthLoadingAnimation();\n  } else {\n    // Hide the auth loading content for other operations\n    authLoadingContent.style.display = \"none\";\n    loaderText.style.display = \"block\";\n  }\n}\n\n// Function to animate the authentication loading steps\nfunction startAuthLoadingAnimation() {\n  const steps = document.querySelectorAll('.auth-loading-step');\n  const dots = document.querySelectorAll('.auth-progress-dot');\n  let currentStep = 0;\n  \n  // Clear any existing interval\n  if (window.authLoadingInterval) {\n    clearInterval(window.authLoadingInterval);\n    window.authLoadingInterval = null; // Ensure it's reset\n  }\n  \n  // Function to update the active step\n  function updateActiveStep() {\n    // Remove active class from all steps and dots\n    steps.forEach(step => step.classList.remove('active'));\n    dots.forEach(dot => dot.classList.remove('active'));\n    \n    // Add active class to current step and dot\n    if (currentStep < steps.length) {\n      steps[currentStep].classList.add('active');\n      dots[currentStep].classList.add('active');\n      currentStep++;\n      \n      // If this was the last step, clear the interval\n      if (currentStep >= steps.length) {\n        if (window.authLoadingInterval) {\n          clearInterval(window.authLoadingInterval);\n          window.authLoadingInterval = null;\n        }\n      }\n    } else {\n      // This part should ideally not be reached if interval is cleared correctly\n      // but as a fallback, clear interval here too\n      if (window.authLoadingInterval) {\n        clearInterval(window.authLoadingInterval);\n        window.authLoadingInterval = null;\n      }\n    }\n  }\n  \n  // Set initial active step\n  updateActiveStep();\n  \n  // Set interval to change steps every 10 seconds (for 50 second total auth time)\n  window.authLoadingInterval = setInterval(updateActiveStep, 10000);\n}\n\n// Update hideLoader function to clean up auth loading animation\nfunction hideLoader() {\n  const loader = document.getElementById(\"loader\");\n  const authLoadingContent = document.getElementById(\"auth-loading-content\");\n  \n  loader.classList.remove(\"active\");\n  \n  // Reset auth loading content\n  if (authLoadingContent) {\n    authLoadingContent.style.display = \"none\";\n    \n    // Reset all steps\n    const steps = document.querySelectorAll('.auth-loading-step');\n    steps.forEach(step => step.classList.remove('active'));\n    steps[0].classList.add('active');\n  }\n  \n  // Clear any existing interval\n  if (window.authLoadingInterval) {\n    clearInterval(window.authLoadingInterval);\n    window.authLoadingInterval = null;\n  }\n  \n  // Reset the cancel button to default state\n  const cancelButton = document.getElementById(\"cancel-generation\");\n  if (cancelButton) {\n    cancelButton.querySelector(\".ms-Button-label\").textContent = \"Cancel Generation\";\n    cancelButton.onclick = cancelGeneration;\n  }\n  \n  // Reset the current controller when hiding loader\n  currentGenerationController = null;\n}\n\n// Add variable to track the current generation request\nlet currentGenerationController = null;\n\n// Add variable to track purchase polling interval\nlet purchaseCheckInterval = null;\n\n/**\n * Check if a user is premium\n * @param {number} userId - The user ID to check premium status for\n * @returns {Promise<boolean>} Whether the user is premium\n */\nasync function checkPremiumStatus(userId) {\n    try {\n        if (!userId) {\n            throw new Error('User ID is required');\n        }\n        \n        const response = await fetch(`https://multiplewords.com/api/account/user_settings/${userId}`);\n\n        if (!response.ok) {\n            throw new Error(`Failed to get premium status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        const userRecord = data?.user_info?.find(user => user.user_id === parseInt(userId));\n        const isPremium = userRecord?.is_user_paid || false;\n\n        return isPremium;\n    } catch (error) {\n        throw error;\n    }\n}\n\n/**\n * Get the premium purchase URL\n * @param {number} userId - The user ID to use in the URL\n * @returns {string} The premium purchase URL\n */\nfunction getPremiumPurchaseUrl(userId) {\n    return `https://saifs.ai/canva_pricing/${userId}/16`;\n}\n\n// Update checkTokens function\nasync function checkTokens() {\n  const tokenDisplay = document.getElementById(\"token-display\");\n  const generateButton = document.getElementById(\"run\");\n\n  try {\n    // Check authentication status first\n    if (!authManager || authManager.isTokenExpired()) {\n      tokenDisplay.textContent = \"0\";\n      tokenDisplay.classList.remove(\"premium\");\n      generateButton.disabled = false;\n      generateButton.classList.remove('disabled');\n      generateButton.querySelector(\".ms-Button-label\").textContent = \"Sign in to Generate Music\";\n      return; // Exit the function early\n    }\n\n    // Get user ID from auth manager only if authenticated\n    const userId = authManager.getUserId();\n    if (!userId) {\n      tokenDisplay.textContent = \"0\";\n      tokenDisplay.classList.remove(\"premium\");\n      generateButton.disabled = true;\n      generateButton.classList.add('disabled');\n      generateButton.querySelector(\".ms-Button-label\").textContent = \"Error\"; // Indicate an issue\n      return;\n    }\n\n    // First check premium status\n    const isPremium = await checkPremiumStatus(userId);\n\n    const response = await fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`, {\n      method: \"GET\"\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (isPremium) {\n      // Handle premium user\n      tokenDisplay.textContent = \"∞\";\n      tokenDisplay.classList.add(\"premium\");\n      // Ensure button is enabled for premium users, regardless of token count\n      generateButton.disabled = false;\n      generateButton.classList.remove('disabled');\n      generateButton.querySelector(\".ms-Button-label\").textContent = \"Generate Music\";\n    } else {\n      // Handle regular user\n      const tokenCount = data.credits && typeof data.credits.videos !== 'undefined' ? data.credits.videos : 0;\n      tokenDisplay.textContent = tokenCount;\n      tokenDisplay.classList.remove(\"premium\");\n\n      // Disable/enable generate button based on token availability\n      if (tokenCount <= 0) {\n        generateButton.disabled = true;\n        generateButton.classList.add('disabled');\n        generateButton.querySelector(\".ms-Button-label\").textContent = \"No Tokens Available\";\n        // Don't show error here, just disable the button\n        // showError(\"You have no tokens left. Please get more credits to continue.\");\n      } else {\n        generateButton.disabled = false;\n        generateButton.classList.remove('disabled');\n        generateButton.querySelector(\".ms-Button-label\").textContent = \"Generate Music\";\n      }\n    }\n  } catch (error) {\n    tokenDisplay.textContent = \"0\";\n    tokenDisplay.classList.remove(\"premium\");\n    // Disable button on error and show appropriate message\n    generateButton.disabled = true;\n    generateButton.classList.add('disabled');\n    generateButton.querySelector(\".ms-Button-label\").textContent = \"Error Checking Tokens\";\n  }\n}\n\n// Add cancel generation function\nasync function cancelGeneration() {\n  if (currentGenerationController) {\n    // Abort the current request\n    currentGenerationController.abort();\n    currentGenerationController = null;\n    \n    // Hide loader and show notification\n    hideLoader();\n    showNotification(\"Image generation cancelled.\", \"success\");\n    \n    // Re-enable generate button\n    const generateButton = document.getElementById(\"run\");\n    generateButton.disabled = false;\n  }\n}\n\n// Update generateImage function to handle music generation\nasync function generateImage() {\n  try {\n    // Check if user is authenticated\n    if (authManager.isTokenExpired()) {\n      // If not authenticated, handle login first\n      showLoader(\"Authenticating...\", false);\n      const authResult = await authManager.authenticate();\n      \n      if (!authResult.success) {\n        hideLoader();\n        showError(`Authentication failed: ${authResult.error}`);\n        return;\n      }\n      \n      // Authentication successful, continue with music generation\n      hideLoader();\n      showSuccess(\"Authentication successful!\");\n      updateAuthUI(true);\n    }\n    \n    // Now proceed with music generation\n    const userId = authManager.getUserId();\n    \n    if (!userId) {\n      showError(\"User ID not available. Please try logging in again.\");\n      return;\n    }\n    \n    const isPremium = await checkPremiumStatus(userId);\n    \n    const promptText = document.querySelector(\".input-field\").value.trim();\n    const categorySelect = document.getElementById(\"music-category-select\");\n    const duration = getDuration();\n    \n    if (!promptText) {\n      showError(\"Please enter a prompt for the music generation.\");\n      return;\n    }\n\n    if (!categorySelect.value) {\n      showError(\"Please select a music category.\");\n      return;\n    }\n\n    // Check tokens before generating\n    \n    const tokenResponse = await fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`, {\n      method: \"GET\"\n    });\n\n    if (!tokenResponse.ok) {\n      throw new Error(`HTTP error! status: ${tokenResponse.status}`);\n    }\n\n    const tokenData = await tokenResponse.json();\n    \n    if (!isPremium && (!tokenData.credits || !tokenData.credits.videos || tokenData.credits.videos < 1)) {\n      showError(\"Insufficient tokens. Please get more credits to continue.\");\n      return;\n    }\n\n    // Show loader and disable generate button\n    showLoader(\"Generating your music...\");\n    const generateButton = document.getElementById(\"run\");\n    generateButton.disabled = true;\n\n    // Create AbortController for the request\n    currentGenerationController = new AbortController();\n\n    // Get the premium status details\n    const premiumResponse = await fetch(`https://multiplewords.com/api/account/user_settings/${userId}`);\n    if (!premiumResponse.ok) {\n        throw new Error(`Failed to get premium status: ${premiumResponse.status}`);\n    }\n    const premiumData = await premiumResponse.json();\n    const userRecord = premiumData?.user_info?.find(user => user.user_id === parseInt(userId));\n    const isUserPaid = userRecord?.is_user_paid || false;\n\n    // Create FormData for music generation\n    const musicFormData = new FormData();\n    musicFormData.append('user_id', userId);\n    musicFormData.append('music_category_id', categorySelect.value);\n    musicFormData.append('music_description', promptText);\n    musicFormData.append('music_name', promptText.substring(0, 50));\n    musicFormData.append('reference_music_id', '1');\n    musicFormData.append('isPro', 'true');\n    musicFormData.append('isProSuper', isUserPaid ? 'true' : 'false');\n\n    try {\n        const response = await fetch(\"https://shorts.multiplewords.com/mwvideos/api/music_prompt\", {\n      method: \"POST\",\n            body: musicFormData,\n      signal: currentGenerationController.signal\n    });\n\n        if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n\n        if (data.status === 1 && data.music_id) {\n            showLoader(\"Checking music generation status...\");\n            \n            // Add retry logic for checking music status - infinite retries\n            let retryCount = 0;\n            const retryDelay = 2000; // 2 seconds\n\n            const checkMusicStatus = async () => {\n                try {\n                    // Call the check_queue_music API with the correct endpoint\n                    \n                    // Check if we need to authenticate\n                    if (authManager.isTokenExpired()) {\n                        const authResult = await authManager.authenticate();\n                        if (!authResult.success) {\n                            throw new Error(`Authentication failed: ${authResult.error}`);\n                        }\n                    }\n                    \n                    // Get user ID and check premium status\n                    const userId = authManager.getUserId();\n                    if (!userId) {\n                        throw new Error(\"User ID not available. Please try logging in again.\");\n                    }\n                    \n                    const checkQueueResponse = await fetch(`https://multiplewords.com/api/check_queue_music/${data.music_id}`, {\n                        method: \"GET\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        signal: currentGenerationController.signal\n                    });\n\n                    if (!checkQueueResponse.ok) {\n                        const errorText = await checkQueueResponse.text();\n                        throw new Error(`HTTP error! status: ${checkQueueResponse.status}, body: ${errorText}`);\n                    }\n\n                    const queueData = await checkQueueResponse.json();\n\n                    if (queueData.status === 1 && queueData.music?.music_url) {\n                        // Store the music details\n                        const musicDetails = {\n                            id: queueData.music.id,\n                            url: queueData.music.music_url,\n                            name: queueData.music.music_name,\n                            description: queueData.music.music_description,\n                            category: queueData.music.music_category_name,\n                            duration: queueData.music.duration,\n                            created_at: queueData.music.music_created_at\n                        };\n                        \n                        // === Show and update the music player UI ===\n                        const playerContainer = document.getElementById('music-player-container');\n                        const player = document.getElementById('music-player');\n                        if (player && playerContainer) {\n                            player.src = musicDetails.url;\n                            playerContainer.style.display = 'block';\n                        }\n                        // === End music player UI update ===\n\n                        // Insert music into PowerPoint\n                        if (Office.context.host === Office.HostType.PowerPoint) {\n                            try {\n                                // Fetch the audio as blob\n                                const audioBlob = await fetchAudioAsBlob(queueData.music.music_url);\n                                \n                                // Insert the audio into the slide\n                                await insertAudioIntoSlide(\n                                    audioBlob,\n                                    musicDetails.name || \"Generated Music\"\n                                );\n                                \n                                showSuccess(\"Music added to slide successfully!\");\n                            } catch (error) {\n                                showError(\"Failed to add music to PowerPoint: \" + error.message);\n                            }\n                        } else {\n                            showError(\"This feature is only available in PowerPoint\");\n                        }\n                        \n      hideLoader();\n                        \n      // Update token count after successful generation\n      if (!isPremium) {\n        checkTokens();\n      }\n                    } else {\n                        // If music is not ready yet, retry after delay\n                        retryCount++;\n                        showLoader(`Generating music...`);\n                        await new Promise(resolve => setTimeout(resolve, retryDelay));\n                        return checkMusicStatus();\n                    }\n                } catch (error) {\n                    // If error occurs, retry after delay\n                    retryCount++;\n                    showLoader(`Generating music...`);\n                    await new Promise(resolve => setTimeout(resolve, retryDelay));\n                    return checkMusicStatus();\n                }\n            };\n\n            // Start checking music status\n            await checkMusicStatus();\n    } else {\n            const errorMsg = data.msg || data.message || \"Failed to generate music. Please try again.\";\n      showError(errorMsg);\n        }\n    } catch (error) {\n        hideLoader();\n        showError(error.message || \"Failed to generate music. Please try again.\");\n    }\n\n    // Reset button state\n    generateButton.disabled = false;\n\n  } catch (error) {\n    hideLoader();\n    \n    let errorMessage = \"An error occurred while generating the music.\";\n    if (error.name === 'AbortError') {\n      errorMessage = \"Music generation was cancelled.\";\n    } else if (error.message.includes(\"HTTP error\")) {\n      errorMessage = \"Failed to connect to the music generation service. Please try again later.\";\n    } else if (error.name === \"TypeError\" && error.message.includes(\"fetch\")) {\n      errorMessage = \"Network error. Please check your internet connection.\";\n    }\n    \n    showError(errorMessage);\n    \n    // Reset button state\n    const generateButton = document.getElementById(\"run\");\n    generateButton.disabled = false;\n  }\n}\n\nasync function insertImageToDocument(imageUrl) {\n  try {\n    const base64Image = await fetchImageAsBase64(imageUrl);\n    \n    return new Promise((resolve, reject) => {\n      Office.onReady((info) => {\n        try {\n          switch (info.host) {\n            case Office.HostType.PowerPoint:\n              // Use setSelectedDataAsync for PowerPoint\n              Office.context.document.setSelectedDataAsync(base64Image, {\n                coercionType: Office.CoercionType.Image,\n                imageLeft: 100,    // Position from the left in points\n                imageTop: 100,     // Position from the top in points\n                imageWidth: 300,   // Width in points\n                imageHeight: 300   // Height in points\n              }, function(asyncResult) {\n                if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n                  resolve();\n                } else {\n                  reject(new Error(asyncResult.error.message));\n                }\n              });\n              break;\n              \n            default:\n              reject(new Error(\"Unsupported Office application\"));\n          }\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\n// Helper function to create a temporary file from base64\nasync function createTempFileFromBase64(base64Data) {\n  try {\n    // Convert base64 to blob\n    const byteCharacters = atob(base64Data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], { type: 'image/png' });\n\n    // Create a temporary file\n    const tempFile = new File([blob], 'temp_image.png', { type: 'image/png' });\n    return tempFile;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function fetchImageAsBase64(imageUrl) {\n  try {\n    const response = await fetch(imageUrl);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch image: ${response.status} ${response.statusText}`);\n    }\n    \n    const blob = await response.blob();\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        try {\n          // Get only the base64 data part\n          const base64String = reader.result.split(',')[1];\n          // Verify we have valid base64 data\n          if (!base64String) {\n            reject(new Error(\"Failed to get valid base64 data from image\"));\n            return;\n          }\n          resolve(base64String);\n        } catch (error) {\n          reject(error);\n        }\n      };\n      reader.onerror = (error) => {\n        reject(error);\n      };\n      reader.readAsDataURL(blob);\n    });\n  } catch (error) {\n    console.error(\"Error in fetchImageAsBase64:\", error);\n    throw new Error(\"Failed to process the generated image: \" + error.message);\n  }\n}\n\n// Update enhancePrompt function to use the new API endpoint and parameters\nasync function enhancePrompt() {\n  try {\n    const textarea = document.querySelector(\".input-field\");\n    const currentPrompt = textarea.value.trim();\n    \n    if (!currentPrompt) {\n      showError(\"Please enter a basic prompt first.\");\n      return;\n    }\n\n    // Disable the enhance button while processing\n    const enhanceButton = document.querySelector(\".enhance-button\");\n    const originalButtonText = enhanceButton.textContent;\n    enhanceButton.textContent = \"Enhancing...\";\n    enhanceButton.disabled = true;\n\n    // Create FormData for the API request\n    const formData = new FormData();\n    formData.append('music_description', currentPrompt);\n\n    // Make the API call\n    const response = await fetch(\"https://shorts.multiplewords.com/mwvideos/api/enhance_prompt\", {\n      method: \"POST\",\n      body: formData,\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    // Check for enhanced_prompt in different possible locations in the response\n    const enhancedPrompt = data.enhanced_prompt || data.data?.enhanced_prompt || data.result?.enhanced_prompt;\n    \n    if (enhancedPrompt) {\n      textarea.value = enhancedPrompt;\n      showSuccess(\"Prompt enhanced successfully!\");\n    } else {\n      throw new Error(\"Failed to enhance prompt: No enhanced prompt in response\");\n    }\n\n  } catch (error) {\n    showError(`Error enhancing prompt: ${error.message}`);\n  } finally {\n    // Reset the enhance button state\n    const enhanceButton = document.querySelector(\".enhance-button\");\n    enhanceButton.textContent = \"Enhance\";\n    enhanceButton.disabled = false;\n  }\n}\n\n// Add function to cancel purchase check\nfunction cancelPurchaseCheck() {\n  if (purchaseCheckInterval) {\n    clearInterval(purchaseCheckInterval);\n    purchaseCheckInterval = null;\n    hideLoader();\n    showNotification(\"Purchase check cancelled. Please refresh if you completed the purchase.\", \"info\");\n  }\n}\n\n// Update getMoreCredits function to use dialog instead of new tab\nasync function getMoreCredits() {\n  try {\n    // Check if user is authenticated\n    if (authManager.isTokenExpired()) {\n      showError(\"Please login to purchase credits\");\n      return;\n    }\n    \n    // Get user ID from auth manager\n    const userId = authManager.getUserId();\n    if (!userId) {\n      showError(\"User ID not available. Please try logging in again.\");\n      return;\n    }\n\n    // Get current token count and premium status before opening purchase page\n    const [initialTokenResponse, initialPremiumStatus] = await Promise.all([\n      fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`),\n      checkPremiumStatus(userId)\n    ]);\n\n    if (!initialTokenResponse.ok) {\n      throw new Error('Failed to get initial token count');\n    }\n\n    const initialData = await initialTokenResponse.json();\n    const initialTokens = initialData.credits?.videos || 0;\n    \n    // Show loader with purchase message and set it as not a generation operation\n    showLoader(\"Processing your purchase...\", false);\n    \n    // Open the pricing page in a dialog instead of a new window\n    try {\n      const result = await authManager.openCreditsDialog(userId);\n      \n      // Hide the loader after the dialog is closed\n      hideLoader();\n      \n      // Check if the purchase was successful\n      if (result.success) {\n        // Start polling for changes to token count\n        startPurchaseCheck(userId, initialTokens, initialPremiumStatus);\n      } else {\n        // Dialog was cancelled or closed without a purchase\n        showNotification(\"Purchase cancelled or completed.\", \"info\");\n      }\n    } catch (error) {\n      showError(\"Failed to open credits purchase page. Please try again.\");\n      hideLoader();\n      return;\n    }\n  } catch (error) {\n    showError(\"An error occurred while processing your request. Please try again.\");\n    hideLoader();\n  }\n}\n\n// Helper function to start checking for purchase completion\nfunction startPurchaseCheck(userId, initialTokens, initialPremiumStatus) {\n  // Clear any existing interval\n  if (purchaseCheckInterval) {\n    clearInterval(purchaseCheckInterval);\n  }\n  \n  let hasUpdated = false; // Flag to track if we've already handled the update\n\n  // Start polling for changes\n  purchaseCheckInterval = setInterval(async () => {\n    if (hasUpdated) return; // Skip if we've already handled the update\n\n    try {\n      // Check both token count and premium status\n      const [tokenResponse, newPremiumStatus] = await Promise.all([\n        fetch(`https://shorts.multiplewords.com/api/tokens_left/get/${userId}`),\n        checkPremiumStatus(userId)\n      ]);\n      \n      if (!tokenResponse.ok) {\n        throw new Error('Failed to get current token count');\n      }\n\n      const tokenData = await tokenResponse.json();\n      const currentTokens = tokenData.credits?.videos || 0;\n      \n      // Stop checking if either tokens increased or user became premium\n      if (currentTokens > initialTokens || (!initialPremiumStatus && newPremiumStatus)) {\n        hasUpdated = true; // Set flag to prevent multiple updates\n        clearInterval(purchaseCheckInterval);\n        purchaseCheckInterval = null;\n        hideLoader();\n        \n        if (newPremiumStatus && !initialPremiumStatus) {\n          showSuccess(\"Premium status activated successfully!\");\n        } else if (currentTokens > initialTokens) {\n          showSuccess(`Credits added successfully! (${currentTokens - initialTokens} tokens added)`);\n        }\n        \n        // Update token display\n        await checkTokens();\n      }\n    } catch (error) {\n      // Don't stop polling on error, just log it\n    }\n  }, 3000); // Check every 3 seconds\n  \n  // Set a timeout to stop checking after 5 minutes\n  setTimeout(() => {\n    if (purchaseCheckInterval && !hasUpdated) {\n      clearInterval(purchaseCheckInterval);\n      purchaseCheckInterval = null;\n      hideLoader();\n      showNotification(\"Purchase status check timed out. Please refresh if you completed the purchase.\", \"error\");\n    }\n  }, 5 * 60 * 1000); // 5 minutes timeout\n}\n\n// Clean up interval when the page is unloaded\nwindow.addEventListener('unload', () => {\n  if (purchaseCheckInterval) {\n    clearInterval(purchaseCheckInterval);\n    purchaseCheckInterval = null;\n  }\n});\n\nfunction showNotification(message, type) {\n  const notification = document.getElementById(\"notification\");\n  notification.textContent = message;\n  notification.className = `notification ${type}`;\n  notification.style.display = \"block\";\n\n  // Hide the notification after 3 seconds\n  setTimeout(() => {\n    notification.style.display = \"none\";\n  }, 3000);\n}\n\nfunction showError(message) {\n  showNotification(message, \"error\");\n}\n\nfunction showSuccess(message) {\n  showNotification(message, \"success\");\n}\n\n// Handle logout\nfunction handleLogout() {\n  authManager.logout();\n  updateAuthUI(false);\n  showSuccess(\"Logged out successfully\");\n}\n\n// Get duration value function\nfunction getDuration() {\n  const durationSlider = document.getElementById(\"duration-slider\");\n  return parseInt(durationSlider.value);\n}\n\n// Function to insert music into the document\nasync function insertMusicToDocument() {\n    try {\n        // Check if Office is initialized\n        if (!Office) {\n            throw new Error(\"Office object is not initialized\");\n        }\n\n        // Get the music player and URL\n        const player = document.getElementById('music-player');\n        \n        if (!player) {\n            throw new Error(\"Music player element not found\");\n        }\n\n        const musicUrl = player.src;\n        \n        if (!musicUrl) {\n            showError(\"No music available to insert\");\n            return;\n        }\n\n        // Show loading state\n        showLoader(\"Inserting music into document...\");\n\n        // Wait for Office to be ready\n        await Office.onReady();\n        \n        // Handle different Office applications\n        switch (Office.context.host) {\n            case Office.HostType.PowerPoint:\n                try {\n                    // First, fetch the audio file\n                    const response = await fetch(musicUrl);\n                    if (!response.ok) {\n                        throw new Error(`Failed to fetch audio: ${response.status}`);\n                    }\n                    const audioBlob = await response.blob();\n\n                    // Convert blob to base64\n                    const audioBase64 = await blobToBase64(audioBlob);\n\n                    // Use PowerPoint.run for better error handling\n                    await PowerPoint.run(async (context) => {\n                        // Get current slide\n                        const slides = context.presentation.getSelectedSlides();\n                        slides.load(\"items\");\n                        await context.sync();\n                        \n                        let currentSlide;\n                        if (slides.items.length === 0) {\n                            currentSlide = context.presentation.slides.add();\n                        } else {\n                            currentSlide = slides.items[0];\n                        }\n\n                        // Add title\n                        const titleShape = currentSlide.shapes.addTextBox(\"Generated Music\", 100, 50, 500, 50);\n                        titleShape.textFrame.textRange.font.size = 32;\n                        titleShape.textFrame.textRange.font.bold = true;\n\n                        // Insert audio using the correct method\n                        try {\n                            // Create a shape for the audio\n                            const audioShape = currentSlide.shapes.addMedia(\n                                audioBase64,\n                                {\n                                    left: 100,\n                                    top: 300,\n                                    width: 200,\n                                    height: 50\n                                }\n                            );\n                        } catch (mediaError) {\n                            throw new Error(`Failed to create audio shape: ${mediaError.message}`);\n                        }\n\n                        // Add instructions\n                        const instructionsShape = currentSlide.shapes.addTextBox(\n                            \"Click the speaker icon above to play/pause the music\",\n                            100, 400, 500, 30\n                        );\n                        instructionsShape.textFrame.textRange.font.color = \"#666666\";\n                        instructionsShape.textFrame.textRange.font.italic = true;\n\n                        await context.sync();\n                    });\n                } catch (pptError) {\n                    throw new Error(`Failed to insert into PowerPoint: ${pptError.message}`);\n                }\n                break;\n\n            default:\n                throw new Error(\"This Office application is not supported for music insertion\");\n        }\n\n        hideLoader();\n        showSuccess(\"Music inserted successfully!\");\n    } catch (error) {\n        hideLoader();\n        showError(\"Failed to insert music: \" + error.message);\n    }\n}\n\nasync function downloadGeneratedMusic() {\n    try {\n        const player = document.getElementById('music-player');\n        const musicUrl = player.src;\n        \n        if (!musicUrl) {\n            showError(\"No music available to download\");\n            return;\n        }\n\n        showLoader(\"Preparing music for download...\");\n\n        // Fetch the audio file\n        const response = await fetch(musicUrl);\n        if (!response.ok) {\n            throw new Error(`Failed to fetch audio: ${response.status}`);\n        }\n\n        // Get the audio data as a blob\n        const audioBlob = await response.blob();\n\n        // Create a URL for the blob\n        const url = URL.createObjectURL(audioBlob);\n\n        // Create a temporary link element\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'generated_music.mp3'; // Set the download filename\n\n        // Append to body (required for Firefox)\n        document.body.appendChild(a);\n\n        // Trigger the download\n        a.click();\n\n        // Clean up\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n\n        hideLoader();\n        showSuccess(\"Music download started!\");\n    } catch (error) {\n        hideLoader();\n        showError(\"Failed to download music: \" + error.message);\n    }\n}\n\n// Helper function to convert blob to base64\nfunction blobToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            // Remove data URL prefix (data:audio/mp3;base64,)\n            const base64 = reader.result.split(',')[1];\n            resolve(base64);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n}\n\n// Helper: Fetch audio from URL as blob\nasync function fetchAudioAsBlob(url) {\n    const response = await fetch(url);\n    if (!response.ok) {\n        throw new Error(`Failed to fetch audio: ${response.statusText}`);\n    }\n    return await response.blob();\n}\n\n// Main function to insert audio into PowerPoint slide\nasync function insertAudioIntoSlide(audioBlob, audioName = \"Generated Audio\") {\n    try {\n        // Convert blob to base64\n        const audioBase64 = await blobToBase64(audioBlob);\n        \n        await PowerPoint.run(async (context) => {\n            // Get current slide or create new one\n            let currentSlide;\n            const slides = context.presentation.getSelectedSlides();\n            slides.load(\"items\");\n            await context.sync();\n            \n            if (slides.items.length === 0) {\n                // No slide selected, create a new one\n                currentSlide = context.presentation.slides.add();\n            } else {\n                currentSlide = slides.items[0];\n            }\n            \n            // Add title to the slide\n            const titleShape = currentSlide.shapes.addTextBox(\"Generated Music\", 100, 50, 500, 50);\n            titleShape.textFrame.textRange.font.size = 32;\n            titleShape.textFrame.textRange.font.bold = true;\n            \n            // Insert audio shape\n            const audioShape = currentSlide.shapes.addMedia(\n                audioBase64,\n                {\n                    left: 100,    // X position\n                    top: 300,     // Y position  \n                    width: 200,   // Width of audio control\n                    height: 50    // Height of audio control\n                }\n            );\n            \n            // Set audio properties\n            audioShape.mediaType = \"audio\";\n            audioShape.name = audioName;\n            \n            // Add instructions text\n            const instructionsShape = currentSlide.shapes.addTextBox(\n                \"Click the speaker icon above to play/pause the music\",\n                100, 400, 500, 30\n            );\n            instructionsShape.textFrame.textRange.font.color = \"#666666\";\n            instructionsShape.textFrame.textRange.font.italic = true;\n            \n            await context.sync();\n            return audioShape;\n        });\n        \n        showSuccess(\"Music added to slide successfully!\");\n    } catch (error) {\n        showError(\"Failed to add music to PowerPoint: \" + error.message);\n        throw error;\n    }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./services/auth-manager.js\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>AI Music Generator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <div id=\\\"notification\\\" class=\\\"notification\\\"></div> <header class=\\\"ms-welcome__header\\\"> <div class=\\\"header-top\\\"> <h1>AI Music Generator</h1> <button id=\\\"logoutButton\\\" class=\\\"ms-Button ms-Button--icon\\\"> <span class=\\\"ms-Button-icon\\\">⏻</span> </button> </div> <p>Transform your ideas into captivating music instantly</p> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <div class=\\\"content-area\\\"> <div class=\\\"dropdown-wrapper\\\"> <label for=\\\"music-category-select\\\" class=\\\"ms-Label\\\">Select music categories</label> <select id=\\\"music-category-select\\\" class=\\\"dropdown-field\\\"> <option value=\\\"\\\" disabled=\\\"disabled\\\" selected=\\\"selected\\\">--Please choose an option--</option> <option value=\\\"1\\\">Pop music</option> <option value=\\\"2\\\">Rock</option> <option value=\\\"3\\\">Popular music</option> <option value=\\\"4\\\">Hip hop music</option> <option value=\\\"5\\\">Rhythm and blues</option> <option value=\\\"6\\\">Country music</option> <option value=\\\"7\\\">Electronic music</option> <option value=\\\"8\\\">Jazz</option> <option value=\\\"9\\\">Classical music</option> <option value=\\\"10\\\">Blues</option> <option value=\\\"11\\\">Folk music</option> <option value=\\\"12\\\">Heavy metal</option> <option value=\\\"13\\\">Singing</option> <option value=\\\"14\\\">Musical theatre</option> <option value=\\\"15\\\">Reggae</option> <option value=\\\"17\\\">Soul music</option> <option value=\\\"18\\\">Electronic dance music</option> <option value=\\\"19\\\">Alternative rock</option> <option value=\\\"20\\\">Dance music</option> <option value=\\\"21\\\">World music</option> <option value=\\\"22\\\">Funk</option> <option value=\\\"24\\\">Easy listening</option> <option value=\\\"25\\\">Punk rock</option> <option value=\\\"26\\\">Indie rock</option> <option value=\\\"27\\\">New-age music</option> <option value=\\\"28\\\">Music of Latin America</option> <option value=\\\"29\\\">Techno</option> <option value=\\\"30\\\">Dubstep</option> <option value=\\\"31\\\">Latin music</option> <option value=\\\"32\\\">Disco</option> <option value=\\\"33\\\">House music</option> <option value=\\\"34\\\">Ska</option> <option value=\\\"35\\\">Ambient music</option> <option value=\\\"36\\\">Industrial music</option> <option value=\\\"37\\\">Electronica</option> <option value=\\\"38\\\">Progressive rock</option> <option value=\\\"40\\\">Electro</option> <option value=\\\"41\\\">Bluegrass</option> <option value=\\\"42\\\">Pop rock</option> <option value=\\\"43\\\">Instrumental</option> <option value=\\\"44\\\">Vocal music</option> <option value=\\\"45\\\">J-pop</option> <option value=\\\"46\\\">Grunge</option> <option value=\\\"47\\\">New wave</option> <option value=\\\"48\\\">Contemporary R&B</option> <option value=\\\"49\\\">Swing music</option> <option value=\\\"50\\\">Soundtrack</option> <option value=\\\"51\\\">Flamenco</option> <option value=\\\"52\\\">Hip hop</option> <option value=\\\"53\\\">Jazz fusion</option> </select> </div> <div class=\\\"input-wrapper\\\"> <textarea class=\\\"input-field\\\" placeholder=\\\"Describe your music (e.g. upbeat electronic music with a tropical vibe)\\\" rows=\\\"4\\\"></textarea> <button class=\\\"enhance-button\\\">Enhance</button> </div> <div class=\\\"slider-wrapper\\\"> <label for=\\\"duration-slider\\\" class=\\\"ms-Label\\\">Duration (seconds)</label> <div class=\\\"duration-controls\\\"> <input type=\\\"range\\\" id=\\\"duration-slider\\\" min=\\\"1\\\" max=\\\"20\\\" value=\\\"15\\\" class=\\\"ms-Slider\\\"/> <input type=\\\"number\\\" id=\\\"duration-input\\\" min=\\\"1\\\" max=\\\"20\\\" value=\\\"15\\\" class=\\\"ms-TextField\\\"/> </div> </div> <button type=\\\"button\\\" id=\\\"run\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero\\\"> <span class=\\\"ms-Button-label\\\">Generate Music</span> </button> </div> <div class=\\\"credits-footer\\\"> <div class=\\\"credits-display\\\"> <span>Available Credits: <span id=\\\"token-display\\\">0</span></span> <button id=\\\"get-more-credits\\\" class=\\\"ms-Button ms-Button--small\\\"> <span class=\\\"ms-Button-label\\\">Get More Credits</span> </button> </div> </div> <div id=\\\"loader\\\" class=\\\"loader-container\\\"> <div class=\\\"loader-spinner\\\"></div> <div class=\\\"loader-text\\\">Generating your music...</div> <div id=\\\"auth-loading-content\\\" class=\\\"auth-loading-content\\\"> <div class=\\\"auth-loading-step active\\\" data-step=\\\"1\\\"> <h3>Connecting to authentication server...</h3> <p>Establishing a secure connection to verify your identity.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"2\\\"> <h3>Preparing your session...</h3> <p>Setting up your personalized workspace with all your preferences.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"3\\\"> <h3>Almost there!</h3> <p>Just a few more seconds to complete the authentication process.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"4\\\"> <h3>Finalizing your login...</h3> <p>We're making sure everything is secure and ready for you.</p> </div> <div class=\\\"auth-loading-step\\\" data-step=\\\"5\\\"> <h3>Just a moment more...</h3> <p>We're almost done setting up your account.</p> </div> <div class=\\\"auth-progress\\\"> <div class=\\\"auth-progress-dot active\\\" data-step=\\\"1\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"2\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"3\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"4\\\"></div> <div class=\\\"auth-progress-dot\\\" data-step=\\\"5\\\"></div> </div> </div> <button id=\\\"cancel-generation\\\" class=\\\"ms-Button ms-Button--danger\\\"> <span class=\\\"ms-Button-label\\\">Cancel Generation</span> </button> </div> <div id=\\\"music-player-container\\\" style=\\\"display:none;margin-top:20px\\\"> <div class=\\\"ms-Label\\\">Generated Music</div> <audio id=\\\"music-player\\\" controls style=\\\"width:100%;margin-top:8px\\\"> Your browser does not support the audio element. </audio> <button id=\\\"download-music\\\" class=\\\"ms-Button ms-Button--primary\\\" style=\\\"margin-top:12px;margin-left:8px\\\"> <span class=\\\"ms-Button-label\\\">Download Music</span> </button> </div> </main> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_slicedToArray","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","_unsupportedIterableToArray","_nonIterableRest","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","authManager","updateAuthUI","isAuthenticated","logoutButton","getElementById","runButton","enhanceButton","querySelector","getMoreCreditsButton","generateButtonLabel","style","display","visibility","disabled","textContent","Office","onReady","info","host","HostType","PowerPoint","OfficeAuthManager","opacity","onclick","generateImage","enhancePrompt","getMoreCredits","cancelGeneration","handleLogout","downloadGeneratedMusic","durationSlider","durationInput","addEventListener","parseInt","target","checkTokens","isTokenExpired","tokenCheckInterval","setInterval","clearInterval","currentAuthProcess","cancelAuthentication","_cancelAuthentication","_callee3","_context3","cancelAuth","hideLoader","showNotification","cancelCreditsDialog","_cancelCreditsDialog","_callee4","_context4","showLoader","message","isGenerating","loader","loaderText","cancelButton","authLoadingContent","classList","add","includes","steps","querySelectorAll","dots","currentStep","updateActiveStep","step","remove","dot","authLoadingInterval","startAuthLoadingAnimation","currentGenerationController","purchaseCheckInterval","checkPremiumStatus","_x","_checkPremiumStatus","_callee5","userId","_data$user_info","response","data","userRecord","isPremium","_context5","fetch","concat","ok","status","json","user_info","find","user","user_id","is_user_paid","t0","_checkTokens","_callee6","tokenDisplay","generateButton","tokenCount","_context6","getUserId","credits","videos","_cancelGeneration","_callee7","_context7","abort","_generateImage","_callee9","_premiumData$user_inf","authResult","promptText","categorySelect","tokenResponse","tokenData","premiumResponse","premiumData","isUserPaid","musicFormData","_checkMusicStatus","errorMessage","_context9","authenticate","success","showError","error","showSuccess","trim","AbortController","FormData","append","substring","body","signal","music_id","checkMusicStatus","_ref2","_callee8","_queueData$music","_authResult","checkQueueResponse","errorText","queueData","musicDetails","playerContainer","player","audioBlob","_context8","headers","text","music","music_url","id","url","music_name","description","music_description","category","music_category_name","duration","created_at","music_created_at","context","fetchAudioAsBlob","insertAudioIntoSlide","setTimeout","t1","msg","_enhancePrompt","_callee13","_data$data","_data$result","textarea","currentPrompt","formData","enhancedPrompt","_enhanceButton","_context13","enhanced_prompt","result","_getMoreCredits","_callee14","_initialData$credits","_yield$Promise$all3","_yield$Promise$all4","initialTokenResponse","initialPremiumStatus","initialData","initialTokens","_context14","all","openCreditsDialog","startPurchaseCheck","hasUpdated","_callee","_tokenData$credits","_yield$Promise$all","_yield$Promise$all2","newPremiumStatus","currentTokens","_context","notification","className","logout","_downloadGeneratedMusic","_callee17","musicUrl","_context17","blob","URL","createObjectURL","createElement","download","appendChild","click","removeChild","revokeObjectURL","blobToBase64","reject","reader","FileReader","onload","base64","split","onerror","readAsDataURL","_x5","_fetchAudioAsBlob","_callee18","_context18","statusText","_x6","_insertAudioIntoSlide","_callee20","audioName","audioBase64","_args20","_context20","run","_ref4","_callee19","currentSlide","slides","titleShape","audioShape","instructionsShape","_context19","presentation","getSelectedSlides","load","sync","items","shapes","addTextBox","textFrame","textRange","font","size","bold","addMedia","left","top","width","height","mediaType","color","italic","_x8"],"sourceRoot":""}